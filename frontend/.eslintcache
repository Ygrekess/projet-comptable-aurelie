[{"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/index.js":"1","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/App.js":"2","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/store.js":"3","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/userReducers.js":"4","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/Auth_Page.js":"5","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/RegisterForm.js":"6","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/userActions.js":"7","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/SigninForm.js":"8","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/MessageBox.js":"9","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/LoadingSpinner.js":"10","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/user_pages/User_Dashboard.js":"11","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/StepsChecker.js":"12","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/user_pages/UserInfos_Page.js":"13","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/Dashboard.js":"14","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Dashboard.js":"15","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/5-brouillon/Test_page.js":"16","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/5-brouillon/Declaration_Page.js":"17","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Dashboard.js":"18","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/PoleItem.js":"19","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Page.js":"20","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/AdminPolePageMenu.js":"21","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Analyse.js":"22","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Infos.js":"23","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Declaration.js":"24","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/DeclarationItem.js":"25","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddDeclaration.js":"26","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Specialites.js":"27","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddSpecialite.js":"28","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/SpecialiteItem.js":"29","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalUpdateSpecialite.js":"30","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalUpdateDeclaration.js":"31","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddPole.js":"32","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/poleReducers.js":"33","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/poleActions.js":"34","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/specialiteReducers.js":"35","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/specialiteActions.js":"36","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/declarationReducers.js":"37","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/declarationActions.js":"38","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/utils.js":"39"},{"size":292,"mtime":1612357950323,"results":"40","hashOfConfig":"41"},{"size":968,"mtime":1612873860878,"results":"42","hashOfConfig":"41"},{"size":1636,"mtime":1613065202232,"results":"43","hashOfConfig":"41"},{"size":753,"mtime":1612433442233,"results":"44","hashOfConfig":"41"},{"size":1062,"mtime":1612469706078,"results":"45","hashOfConfig":"41"},{"size":1851,"mtime":1612435003896,"results":"46","hashOfConfig":"41"},{"size":983,"mtime":1612971467492,"results":"47","hashOfConfig":"41"},{"size":1585,"mtime":1612434992176,"results":"48","hashOfConfig":"41"},{"size":138,"mtime":1612433227157,"results":"49","hashOfConfig":"41"},{"size":200,"mtime":1612434801973,"results":"50","hashOfConfig":"41"},{"size":1225,"mtime":1612874649135,"results":"51","hashOfConfig":"41"},{"size":875,"mtime":1612450986160,"results":"52","hashOfConfig":"41"},{"size":3040,"mtime":1612874510433,"results":"53","hashOfConfig":"41"},{"size":1131,"mtime":1612884342086,"results":"54","hashOfConfig":"41"},{"size":861,"mtime":1612883134491,"results":"55","hashOfConfig":"41"},{"size":9329,"mtime":1612874699707,"results":"56","hashOfConfig":"41"},{"size":7179,"mtime":1612874741690,"results":"57","hashOfConfig":"41"},{"size":2009,"mtime":1613085181311,"results":"58","hashOfConfig":"41"},{"size":247,"mtime":1612979209564,"results":"59","hashOfConfig":"41"},{"size":2709,"mtime":1613233128410,"results":"60","hashOfConfig":"41"},{"size":592,"mtime":1612989137216,"results":"61","hashOfConfig":"41"},{"size":39941,"mtime":1613425783933,"results":"62","hashOfConfig":"41"},{"size":5931,"mtime":1613234714971,"results":"63","hashOfConfig":"41"},{"size":2048,"mtime":1613153989794,"results":"64","hashOfConfig":"41"},{"size":1072,"mtime":1613232837687,"results":"65","hashOfConfig":"41"},{"size":20305,"mtime":1613240606244,"results":"66","hashOfConfig":"41"},{"size":2029,"mtime":1613154006409,"results":"67","hashOfConfig":"41"},{"size":4249,"mtime":1613156455257,"results":"68","hashOfConfig":"41"},{"size":1014,"mtime":1613083760257,"results":"69","hashOfConfig":"41"},{"size":4847,"mtime":1613219267511,"results":"70","hashOfConfig":"41"},{"size":22270,"mtime":1613255819546,"results":"71","hashOfConfig":"41"},{"size":5878,"mtime":1613234683416,"results":"72","hashOfConfig":"41"},{"size":1592,"mtime":1613085698931,"results":"73","hashOfConfig":"41"},{"size":1584,"mtime":1613065103374,"results":"74","hashOfConfig":"41"},{"size":1738,"mtime":1613064989644,"results":"75","hashOfConfig":"41"},{"size":1909,"mtime":1613414630548,"results":"76","hashOfConfig":"41"},{"size":1745,"mtime":1613234001623,"results":"77","hashOfConfig":"41"},{"size":1913,"mtime":1613070063963,"results":"78","hashOfConfig":"41"},{"size":3838,"mtime":1613405030966,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"15dm4dx",{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/index.js",[],["175","176"],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/App.js",["177","178"],"import { useEffect, useState } from 'react';\nimport './4-css/App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Auth_Page from './3-pages/Auth_Page';\nimport Dashboard from './3-pages/Dashboard';\n\nfunction App() {\n\n/*   const getTest = async () => {\n    try {\n      const { data } = await axios.get('http://localhost:5000/api/auth/gettest',\n        {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        }\n      );\n\n      console.log(data)\n    } catch (error) {\n      console.log(error.response.data)\n    }\n  } */\n\n  useEffect(() => {\n    return () => {\n    }\n  }, [])\n\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n        <header className=\"App-header\">\n          <Route path='/connexion' component={Auth_Page} />\n          <Route path='/dashboard' component={Dashboard}/>\n      </header>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/store.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/userReducers.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/Auth_Page.js",["179"],"import React, { useEffect, useState } from 'react'\nimport RegisterForm from './components/RegisterForm'\nimport '../4-css/Auth_Page.css'\nimport { useSelector } from 'react-redux'\nimport SigninForm from './components/SigninForm'\n\nexport default function Auth_Page(props) {\n\n\tconst [form, setForm] = useState('register');\n\n\tconst userLogin = useSelector(state => state.userLogin);\n\tconst { userInfos } = userLogin;\n\n\tuseEffect(() => {\n\t\tif (userInfos) {\n\t\t\tprops.history.push('/dashboard');\n\t\t}\n\t\treturn () => {\n\t\t}\n\t}, [userInfos])\n\n\treturn (\n\t\t<div className='auth_page'>\n\t\t\t<div className={'form-container ' + form}>\n\t\t\t\t<RegisterForm props={props} />\n\t\t\t\t\t\t<div className='btn-signin'>\n\t\t\t\t\t\t\t<label>Déjà un compte ?</label>\n\t\t\t\t\t\t\t<button className='' onClick={() => setForm('signin')}>Me connecter</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='btn-register'>\n\t\t\t\t\t\t\t<label>Pas encore de compte ?</label>\n\t\t\t\t\t\t\t<button className='' onClick={() => setForm('register')}>M'inscrire</button>\n\t\t\t\t\t\t</div>\t\n\t\t\t\t<SigninForm props={props}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/RegisterForm.js",["180","181"],"import React, { useEffect, useState } from 'react'\nimport { register } from '../../2-actions/userActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MessageBox from './MessageBox';\nimport LoadingSpinner from './LoadingSpinner';\n\nexport default function RegisterForm({ props }) {\n\n\tconst [name, setName] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [registerError, setRegisterError] = useState('');\n\n\tconst userRegister = useSelector(state => state.userRegister);\n\tconst { loading, success, error } = userRegister;\n\n\tconst dispatch = useDispatch()\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(register(name, email, password));\n\t}\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tsetRegisterError(error)\n\t\t}\n\t\tif (success) {\n\t\t\tsetName('');\n\t\t\tsetEmail('');\n\t\t\tsetPassword('');\n\t\t}\n\t\treturn () => {\n\t\t}\n\t}, [error, success])\n\n\treturn (\n\t\t<div>\n\t\t\t<form onChange={() => setRegisterError('')} className='form register' onSubmit={submitHandler}>\n\t\t\t\t<h2>Inscription</h2>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder='Nom' value={name} onChange={(e) => setName(e.target.value)} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder='Mot de passe' value={password} onChange={(e) => setPassword(e.target.value)}/>\n\t\t\t\t</div>\n\t\t\t\t<div className='validate-btn'>\n\t\t\t\t\t{\n\t\t\t\t\t\tloading ? \n\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<button>Valider</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className='message-container'>\n\t\t\t\t{\n\t\t\t\t\tregisterError &&\n\t\t\t\t\t<MessageBox style='danger' message={registerError}/>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tsuccess &&\n\t\t\t\t\t<MessageBox style='success' message='Votre compte a été créé.'/>\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/userActions.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/SigninForm.js",["182","183","184"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../2-actions/userActions';\nimport LoadingSpinner from './LoadingSpinner';\nimport MessageBox from './MessageBox';\n\nexport default function SigninForm() {\n\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [signinError, setSigninError] = useState('');\n\n\tconst userLogin = useSelector(state => state.userLogin);\n\tconst { loading, error, success } = userLogin;\n\n\tconst dispatch = useDispatch()\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(login(email, password))\n\t}\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tsetSigninError(error)\n\t\t}\n\t\tif (success) {\n\t\t\tsetEmail('')\n\t\t\tsetPassword('')\n\t\t}\n\t\treturn () => {\n\t\t}\n\t}, [error])\n\n\treturn (\n\t\t<div>\n\t\t\t<form className='form signin' onSubmit={submitHandler}>\n\t\t\t\t<h2>Connexion</h2>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder='Mot de passe' value={password} onChange={(e) => setPassword(e.target.value)}/>\n\t\t\t\t</div>\n\t\t\t\t<div className='validate-btn'>\n\t\t\t\t\t{\n\t\t\t\t\t\tloading ? \n\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<button>Valider</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className='message-container'>\n\t\t\t\t{\n\t\t\t\t\tsigninError &&\n\t\t\t\t\t<MessageBox style='danger' message={signinError}/>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tsuccess &&\n\t\t\t\t\t<MessageBox style='success' message='Vous êtes connecté.'/>\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/MessageBox.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/LoadingSpinner.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/user_pages/User_Dashboard.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/StepsChecker.js",["185"],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/user_pages/UserInfos_Page.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/Dashboard.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Dashboard.js",["186","187"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport '../../4-css/Dashboard.css'\nimport { VscAccount } from 'react-icons/vsc'\nimport { BsPencilSquare, BsFileText } from 'react-icons/bs'\nimport { RiLineChartLine } from 'react-icons/ri'\n\nexport default function Admin_Dashboard() {\n\treturn (\n\t\t<div className='admin-dashboard page'>\n\t\t\t<h1>Bonjour Youssef</h1>\n\t\t\t<div className='menu-container'>\n\t\t\t\t<div className='menu-item'>\n\t\t\t\t\t<Link to='/dashboard/admin/mon-compte'>\n\t\t\t\t\t\t<div className='icon-title'>\n\t\t\t\t\t\t\t<VscAccount size={80}/>\n\t\t\t\t\t\t\t<h6>Infos compte</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className='menu-item'>\n\t\t\t\t\t<Link to='/dashboard/admin/mes-poles'>\n\t\t\t\t\t<div className='icon-title'>\n\t\t\t\t\t\t<BsPencilSquare size={80}/>\n\t\t\t\t\t\t<h6>Mes pôles santé</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/5-brouillon/Test_page.js",["188"],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/5-brouillon/Declaration_Page.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Dashboard.js",["189"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport PoleItem from \"../components/PoleItem\";\nimport { FiPlus } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport ModalAddPole from \"../components/ModalAddPole\";\nimport ReactModal from \"react-modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllPole } from \"../../2-actions/poleActions\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nexport default function Admin_Pole_Dashboard(props) {\n  const [addPole, setAddPole] = useState(false);\n  const dispatch = useDispatch();\n\n  const allPolesGet = useSelector((state) => state.allPolesGet);\n  const { loading, poles, error } = allPolesGet;\n\n  const poleAdd = useSelector((state) => state.poleAdd);\n  const { success } = poleAdd;\n\n  useEffect(() => {\n    dispatch(getAllPole());\n    return () => {};\n  }, [success]);\n\n  return (\n    <div className=\"admin-pole-dashboard\">\n      {loading ? (\n        <LoadingSpinner />\n      ) : error ? (\n        <p className=\"danger\">{error}</p>\n      ) : (\n        <Fragment>\n          <ReactModal\n            isOpen={addPole}\n            className=\"Modal-add-pole\"\n            ariaHideApp={false}\n            overlayClassName=\"Overlay-add-pole\"\n            onRequestClose={() => setAddPole(!addPole)}\n          >\n            <ModalAddPole />\n          </ReactModal>\n          <div className=\"arrow-header\">\n            <Link to={\"/dashboard/admin/\"}>\n              <IoMdArrowRoundBack className=\"arrow-back\" size={40} />\n            </Link>\n            <h1>Liste des pôles</h1>\n          </div>\n          <div className=\"admin-pole-items-container\">\n            {poles.map((pole, i) => (\n              <PoleItem key={i} pole={pole} />\n            ))}\n            <div className=\"add-pole-item\" onClick={() => setAddPole(!addPole)}>\n              <FiPlus size={80} />\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/PoleItem.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Page.js",["190"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport AdminPolePageMenu from \"../components/AdminPolePageMenu\";\nimport Admin_Pole_Infos from \"./Admin_Pole_Infos\";\nimport Admin_Pole_Specialites from \"./Admin_Pole_Specialites\";\nimport Admin_Pole_Analyse from \"./Admin_Pole_Analyse\";\nimport Admin_Pole_Declaration from \"./Admin_Pole_Declaration\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getOnePole, resetSuccessPole } from \"../../2-actions/poleActions\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport Notifications, { notify } from \"react-notify-toast\";\n\nexport default function Admin_Pole_Page(props) {\n  let [compteur, setCompteur] = useState(0);\n\n  const poleSelected = useSelector((state) => state.poleSelected);\n  const { loading, pole, error } = poleSelected;\n\n  const poleUpdated = useSelector((state) => state.poleUpdated);\n  const { success: poleUpdatedSuccess } = poleUpdated;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (poleUpdatedSuccess) {\n      notify.show(\n        \"Les modifications ont été enregistrées !\",\n        \"success\",\n        2500,\n        \"#0E1717\"\n      );\n      dispatch(getOnePole(props.match.params.id));\n      dispatch(resetSuccessPole());\n    }\n    if (compteur < 1) {\n      dispatch(getOnePole(props.match.params.id));\n    }\n    setCompteur(compteur + 1);\n    return () => {};\n  }, [poleUpdatedSuccess]);\n  return (\n    <div className=\"admin-pole-page\">\n      <Notifications />\n      {loading ? (\n        <LoadingSpinner />\n      ) : error ? (\n        <p className=\"danger\">{error}</p>\n      ) : (\n        <Fragment>\n          <div className=\"arrow-header\">\n            <Link to={\"/dashboard/admin/mes-poles/\"}>\n              <IoMdArrowRoundBack className=\"arrow-back\" size={40} />\n            </Link>\n            <h1>{pole.name}</h1>\n          </div>\n          <div className=\"admin-pole-page-body\">\n            <AdminPolePageMenu pole={pole} />\n            <Route\n              path=\"/dashboard/admin/mes-poles/:id/infos\"\n              component={Admin_Pole_Infos}\n            />\n            <Route\n              path=\"/dashboard/admin/mes-poles/:id/declarations\"\n              component={Admin_Pole_Declaration}\n            />\n            <Route\n              path=\"/dashboard/admin/mes-poles/:id/specialites\"\n              component={Admin_Pole_Specialites}\n            />\n            <Route\n              path=\"/dashboard/admin/mes-poles/:id/analyse/:declarationId?\"\n              component={Admin_Pole_Analyse}\n            />\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/AdminPolePageMenu.js",["191"],"import React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\n\nexport default function AdminPolePageMenu({pole}) {\n\treturn (\n\t\t<ul className='admin-pole-page-menu'>\n\t\t\t<NavLink to={`/dashboard/admin/mes-poles/${pole._id}/infos`}><li>Infos générales</li></NavLink>\n\t\t\t<NavLink to={`/dashboard/admin/mes-poles/${pole._id}/declarations`}><li>Déclarations</li></NavLink>\n\t\t\t<NavLink to={`/dashboard/admin/mes-poles/${pole._id}/specialites`}><li>Spécialités</li></NavLink>\n\t\t\t<NavLink to={`/dashboard/admin/mes-poles/${pole._id}/analyse`}><li>Analyse</li></NavLink>\n\t\t</ul>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Analyse.js",["192","193"],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Infos.js",["194","195","196"],"import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getOnePole,\n  resetSuccessPoleUpdate,\n  updatePole,\n} from \"../../2-actions/poleActions\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport Notifications, { notify } from \"react-notify-toast\";\n\nexport default function Admin_Pole_Infos(props) {\n  const poleSelected = useSelector((state) => state.poleSelected);\n  const { pole } = poleSelected;\n\n  const poleUpdated = useSelector((state) => state.poleUpdated);\n  const { loading, error } = poleUpdated;\n\n  const { register, handleSubmit, errors } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    const poleUpdated = {\n      name: data.name,\n      address: data.address,\n      postalCode: data.postalCode,\n      city: data.city,\n      surfaceTotale: data.surfaceTotale,\n      surfaceCommuns: data.surfaceCommuns,\n      repartitionSurfCommuns: data.repartitionSurfCommuns,\n      surfaceProfNonRepr: data.surfaceProfNonRepr,\n      repartitionSurfaceProfNonRepr: data.repartitionSurfaceProfNonRepr,\n      loyerAnnuel: data.loyerAnnuel,\n      loyerMensuelm2: (\n        Number(data.loyerAnnuel / data.surfaceTotale) / 12\n      ).toFixed(2),\n      salaire: data.salaire,\n      chargesSociales: data.chargesSociales,\n    };\n    dispatch(updatePole(pole._id, poleUpdated));\n  };\n\n  useEffect(() => {\n    return () => {};\n  }, []);\n\n  return (\n    <div className=\"pole-infos-page\">\n      <Notifications />\n      <form\n        id=\"pole-infos-form\"\n        className=\"pole-infos-form\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <h2>Infos genérales</h2>\n        <div>\n          <label>Nom</label>\n          <input\n            name=\"name\"\n            className={errors.name && \"error\"}\n            defaultValue={pole.name}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Adresse</label>\n          <input\n            name=\"address\"\n            className={errors.address && \"error\"}\n            defaultValue={pole.address}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Code postal</label>\n          <input\n            name=\"postalCode\"\n            className={errors.postalCode && \"error\"}\n            defaultValue={pole.postalCode}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Ville</label>\n          <input\n            name=\"city\"\n            className={errors.city && \"error\"}\n            defaultValue={pole.city}\n            ref={register}\n          />\n        </div>\n        <hr />\n        <h2>Surface</h2>\n        <div>\n          <label>Surface totale (m²)</label>\n          <input\n            name=\"surfaceTotale\"\n            className={errors.surfaceTotale && \"error\"}\n            defaultValue={pole.surfaceTotale}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Loyer annuel (€)</label>\n          <input\n            name=\"loyerAnnuel\"\n            defaultValue={pole.loyerAnnuel}\n            className={errors.loyerAnnuel && \"error\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Surface communs (m²)</label>\n          <input\n            name=\"surfaceCommuns\"\n            className={errors.surfaceCommuns && \"error\"}\n            defaultValue={pole.surfaceCommuns}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"repartitionSurfCommuns\">\n            Répartition surface communs\n          </label>\n          <select\n            name=\"repartitionSurfCommuns\"\n            id=\"repartitionSurfCommuns\"\n            ref={register}\n            defaultValue={pole.repartitionSurfCommuns}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"surfacePropre\">% Surface propre</option>\n            <option value=\"recettes\">% Recettes</option>\n            <option value=\"bailleur\">100% Bailleur</option>\n            <option value=\"mg\">100% MG</option>\n          </select>\n        </div>\n        <div>\n          <label>Surface profession non représentée (m²)</label>\n          <input\n            name=\"surfaceProfNonRepr\"\n            className={errors.surfaceProfNonRepr && \"error\"}\n            defaultValue={pole.surfaceProfNonRepr}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"repartitionSurfaceProfNonRepr\">\n            Répartition surface profession non représentée\n          </label>\n          <select\n            name=\"repartitionSurfaceProfNonRepr\"\n            id=\"repartitionSurfaceProfNonRepr\"\n            defaultValue={pole.repartitionSurfaceProfNonRepr}\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"surfacePropre\">% Surface propre</option>\n            <option value=\"recettes\">% Recettes</option>\n            <option value=\"bailleur\">100% Bailleur</option>\n            <option value=\"mg\">100% MG</option>\n          </select>\n        </div>\n        <hr />\n        <h2>Employés</h2>\n        <div>\n          <label>Salaire brut (€)</label>\n          <input\n            name=\"salaire\"\n            className={errors.salaire && \"error\"}\n            defaultValue={pole.salaire}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Charges sociales (%)</label>\n          <input\n            name=\"chargesSociales\"\n            className={errors.chargesSociales && \"error\"}\n            defaultValue={pole.chargesSociales}\n            ref={register}\n          />\n        </div>\n        <button type=\"submit\" form=\"pole-infos-form\" value=\"\">\n          Valider les modifications\n        </button>\n      </form>\n      {loading && <LoadingSpinner />}\n      {error && <p className=\"danger\">{error}</p>}\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Declaration.js",["197"],"import React, { useEffect, useState } from \"react\";\nimport DeclarationItem from \"../components/DeclarationItem\";\nimport { FiPlus } from \"react-icons/fi\";\nimport ModalAddDeclaration from \"../components/ModalAddDeclaration\";\nimport ReactModal from \"react-modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllDeclarations } from \"../../2-actions/declarationActions\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nexport default function Admin_Pole_Declaration() {\n  const allDeclarationsGet = useSelector((state) => state.allDeclarationsGet);\n  const { loading, declarations, error } = allDeclarationsGet;\n\n  const poleSelected = useSelector((state) => state.poleSelected);\n  const { pole } = poleSelected;\n\n  const declarationUpdated = useSelector((state) => state.declarationUpdated);\n  const { success } = declarationUpdated;\n\n  const [addDeclaration, setAddDeclaration] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!declarations) {\n      dispatch(getAllDeclarations(pole._id));\n    }\n    return () => {};\n  }, [success]);\n\n  return loading ? (\n    <LoadingSpinner />\n  ) : error ? (\n    <p className=\"danger\">{error}</p>\n  ) : (\n    <div className=\"admin-pole-declaration-page\">\n      <h2>Déclarations</h2>\n      {addDeclaration && (\n        <ReactModal\n          isOpen={addDeclaration}\n          className=\"Modal-add-declaration\"\n          ariaHideApp={false}\n          overlayClassName=\"Overlay-add-declaration\"\n          onRequestClose={() => setAddDeclaration(!addDeclaration)}\n        >\n          <ModalAddDeclaration pole={pole} />\n        </ReactModal>\n      )}\n      <div className=\"pole-declarations-items-container\">\n        {declarations.map((declaration, i) => (\n          <DeclarationItem key={i} declaration={declaration} pole={pole} />\n        ))}\n        <div\n          className=\"add-declaration-item\"\n          onClick={() => setAddDeclaration(!addDeclaration)}\n        >\n          <FiPlus size={80} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/DeclarationItem.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddDeclaration.js",["198","199","200","201"],"import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport {\n  addDeclaration,\n  getAllDeclarations,\n  resetSuccessDeclaration,\n} from \"../../2-actions/declarationActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notifications, { notify } from \"react-notify-toast\";\n\nexport default function ModalAddDeclaration({ pole }) {\n  const { register, handleSubmit, reset, errors } = useForm({});\n\n  const declarationAdd = useSelector((state) => state.declarationAdd);\n  const { loading, success, error } = declarationAdd;\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    const declaration = {\n      loyer: {\n        total: data.loyer,\n        fixe: data.loyerFixe,\n        repartition: data.loyerRep,\n      },\n      electricite: {\n        total: data.electricite,\n        fixe: data.electriciteFixe,\n        repartition: data.electriciteRep,\n      },\n      eau: {\n        total: data.eau,\n        fixe: data.eauFixe,\n        repartition: data.eauRep,\n      },\n      fournAdmin: {\n        total: data.fournAdmin,\n        fixe: data.fournAdmin,\n        repartition: data.fournAdminRep,\n      },\n      fournEntr: {\n        total: data.fournEntr,\n        fixe: data.fournEntrFixe,\n        repartition: data.fournEntrRep,\n      },\n      menage: {\n        total: data.menage,\n        fixe: data.menageFixe,\n        repartition: data.menageRep,\n      },\n      assurance: {\n        total: data.assurance,\n        fixe: data.assuranceFixe,\n        repartition: data.assuranceRep,\n      },\n      honoraires: {\n        total: data.honoraires,\n        fixe: data.honorairesFixe,\n        repartition: data.honorairesRep,\n      },\n      annoncesInsertions: {\n        total: data.annoncesInsertions,\n        fixe: data.annoncesInsertionsFixe,\n        repartition: data.annoncesInsertionsRep,\n      },\n      fraisPostaux: {\n        total: data.fraisPostaux,\n        fixe: data.fraisPostauxFixe,\n        repartition: data.fraisPostauxRep,\n      },\n      internetTelephone: {\n        total: data.internetTelephone,\n        fixe: data.internetTelephoneFixe,\n        repartition: data.internetTelephoneRep,\n      },\n      fraisBancaires: {\n        total: data.fraisBancaires,\n        fixe: data.fraisBancairesFixe,\n        repartition: data.fraisBancairesRep,\n      },\n      cfe: {\n        total: data.cfe,\n        fixe: data.cfeFixe,\n        repartition: data.cfeRep,\n      },\n      receptionDeplacement: {\n        total: data.receptionDeplacement,\n        fixe: data.receptionDeplacementFixe,\n        repartition: data.receptionDeplacementRep,\n      },\n      petitEquipement: {\n        total: data.petitEquipement,\n        fixe: data.petitEquipementFixe,\n        repartition: data.petitEquipementRep,\n      },\n    };\n    dispatch(addDeclaration(pole._id, declaration));\n  };\n\n  useEffect(() => {\n    if (success) {\n      notify.show(\n        \"La déclaration a bien été créée !\",\n        \"success\",\n        2000,\n        \"#0E1717\"\n      );\n      reset({});\n      dispatch(resetSuccessDeclaration());\n      dispatch(getAllDeclarations(pole._id));\n    }\n    return () => {};\n  }, [success]);\n\n  return (\n    <div className=\"modal-add-declaration\">\n      <Notifications />\n      <form\n        id=\"form-add-declaration\"\n        className=\"form-add-declaration\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <h2>Déclaration</h2>\n        <div>\n          <div>\n            <label>Loyer (€)</label>\n            <input\n              name=\"loyer\"\n              className={errors.loyer && \"error\"}\n              defaultValue={\"\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"loyerFixe\"\n              className={errors.loyerFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"loyerRep\">Mode de répartition</label>\n            <select\n              name=\"loyerRep\"\n              id=\"loyerRep\"\n              defaultValue=\"coefSurface\"\n              ref={register}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n        <div>\n          <div>\n            <label>Electricité (€)</label>\n            <input\n              name=\"electricite\"\n              className={errors.electricite && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"electriciteFixe\"\n              className={errors.electriciteFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"electriciteRep\">Mode de répartition</label>\n            <select\n              name=\"electriciteRep\"\n              id=\"electriciteRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n        <div>\n          <div>\n            <label>Eau (€)</label>\n            <input\n              name=\"eau\"\n              className={errors.eau && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"eauFixe\"\n              className={errors.eauFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"eauRep\">Mode de répartition</label>\n            <select\n              name=\"eauRep\"\n              id=\"eauRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Fournitures administratives (€)</label>\n            <input\n              name=\"fournAdmin\"\n              className={errors.fournAdmin && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fournAdminFixe\"\n              className={errors.fournAdminFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fournAdminRep\">Mode de répartition</label>\n            <select\n              name=\"fournAdminRep\"\n              id=\"fournAdminRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Fournitures entretien (€)</label>\n            <input\n              name=\"fournEntr\"\n              className={errors.fournEntr && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fournEntrFixe\"\n              className={errors.fournEntrFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fournEntrRep\">Mode de répartition</label>\n            <select\n              name=\"fournEntrRep\"\n              id=\"fournEntrRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Ménage/entretien et réparations (€)</label>\n            <input\n              name=\"menage\"\n              className={errors.menage && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"menageFixe\"\n              className={errors.menageFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"menageRep\">Mode de répartition</label>\n            <select\n              name=\"menageRep\"\n              id=\"menageRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Assurance (€)</label>\n            <input\n              name=\"assurance\"\n              className={errors.assurance && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"assuranceFixe\"\n              className={errors.assuranceFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"assuranceRep\">Mode de répartition</label>\n            <select\n              name=\"assuranceRep\"\n              id=\"assuranceRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Honoraires (€)</label>\n            <input\n              name=\"honoraires\"\n              className={errors.honoraires && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"honorairesFixe\"\n              className={errors.honorairesFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"honorairesRep\">Mode de répartition</label>\n            <select\n              name=\"honorairesRep\"\n              id=\"honorairesRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Annonces et insertions (€)</label>\n            <input\n              name=\"annoncesInsertions\"\n              className={errors.annoncesInsertions && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"annoncesInsertionsFixe\"\n              className={errors.annoncesInsertionsFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"annoncesInsertionsRep\">Mode de répartition</label>\n            <select\n              name=\"annoncesInsertionsRep\"\n              id=\"annoncesInsertionsRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Frais postaux (€)</label>\n            <input\n              name=\"fraisPostaux\"\n              className={errors.fraisPostaux && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fraisPostauxFixe\"\n              className={errors.fraisPostauxFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fraisPostauxRep\">Mode de répartition</label>\n            <select\n              name=\"fraisPostauxRep\"\n              id=\"fraisPostauxRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Internet et téléphone (€)</label>\n            <input\n              name=\"internetTelephone\"\n              className={errors.internetTelephone && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"internetTelephoneFixe\"\n              className={errors.internetTelephoneFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"internetTelephoneRep\">Mode de répartition</label>\n            <select\n              name=\"internetTelephoneRep\"\n              id=\"internetTelephoneRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Frais bancaires (€)</label>\n            <input\n              name=\"fraisBancaires\"\n              className={errors.fraisBancaires && \"error\"}\n              defaultValue={\"\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fraisBancairesFixe\"\n              className={errors.fraisBancairesFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fraisBancairesRep\">Mode de répartition</label>\n            <select\n              name=\"fraisBancairesRep\"\n              id=\"fraisBancairesRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>CFE (€)</label>\n            <input\n              name=\"cfe\"\n              className={errors.cfe && \"error\"}\n              defaultValue={\"\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"cfeFixe\"\n              className={errors.cfeFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"cfeRep\">Mode de répartition</label>\n            <select\n              name=\"cfeRep\"\n              id=\"cfeRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Réception/déplacement (€)</label>\n            <input\n              name=\"receptionDeplacement\"\n              className={errors.receptionDeplacement && \"error\"}\n              defaultValue={\"\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"receptionDeplacementFixe\"\n              className={errors.receptionDeplacementFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"receptionDeplacementRep\">Mode de répartition</label>\n            <select\n              name=\"receptionDeplacementRep\"\n              id=\"receptionDeplacementRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Petit équipement (€)</label>\n            <input\n              name=\"petitEquipement\"\n              className={errors.petitEquipement && \"error\"}\n              defaultValue={\"\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"petitEquipementFixe\"\n              className={errors.petitEquipementFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"petitEquipementRep\">Mode de répartition</label>\n            <select\n              name=\"petitEquipementRep\"\n              id=\"petitEquipementRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <button type=\"submit\" form=\"form-add-declaration\" value=\"\">\n          Valider\n        </button>\n      </form>\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Specialites.js",["202","203"],"import React, { useEffect, useState } from \"react\";\nimport { FiPlus } from \"react-icons/fi\";\nimport ModalAddSpecialite from \"../components/ModalAddSpecialite\";\nimport ReactModal from \"react-modal\";\nimport SpecialiteItem from \"../components/SpecialiteItem\";\nimport ModalUpdateSpecialite from \"../components/ModalUpdateSpecialite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { getAllSpecialites } from \"../../2-actions/specialiteActions\";\n\nexport default function Admin_Pole_Specialites() {\n  const poleSelected = useSelector((state) => state.poleSelected);\n  const { pole } = poleSelected;\n\n  const specialiteUpdated = useSelector((state) => state.specialiteUpdated);\n  const { success } = specialiteUpdated;\n\n  const allSpecialitesGet = useSelector((state) => state.allSpecialitesGet);\n  const { loading, specialites, error } = allSpecialitesGet;\n\n  const [addSpecialite, setAddSpecialite] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!specialites) {\n      dispatch(getAllSpecialites(pole._id));\n    }\n    return () => {};\n  }, [success]);\n\n  return loading ? (\n    <LoadingSpinner />\n  ) : error ? (\n    <p className=\"danger\">{error}</p>\n  ) : (\n    <div className=\"admin-pole-specialites-page\">\n      <h2>Liste spécialités</h2>\n      <ReactModal\n        isOpen={addSpecialite}\n        className=\"Modal-add-specialite\"\n        ariaHideApp={false}\n        overlayClassName=\"Overlay-add-specialite\"\n        onRequestClose={() => setAddSpecialite(!addSpecialite)}\n      >\n        <ModalAddSpecialite />\n      </ReactModal>\n      <div className=\"pole-specialites-items-container\">\n        {specialites.map((specialite, i) => (\n          <SpecialiteItem key={i} specialite={specialite} pole={pole} />\n        ))}\n\n        <div\n          className=\"add-specialite-item\"\n          onClick={() => setAddSpecialite(!addSpecialite)}\n        >\n          <FiPlus size={80} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddSpecialite.js",["204","205"],"import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addSpecialite,\n  getAllSpecialites,\n  resetSuccessSpecialite,\n} from \"../../2-actions/specialiteActions\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport Notifications, { notify } from \"react-notify-toast\";\n\nexport default function ModalAddSpecialite() {\n  const poleSelected = useSelector((state) => state.poleSelected);\n  const { pole } = poleSelected;\n\n  console.log(pole);\n  const specialiteAdd = useSelector((state) => state.specialiteAdd);\n  const { loading, success, error } = specialiteAdd;\n\n  const { register, handleSubmit, reset, errors } = useForm();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    const specialite = {\n      name: data.name,\n      nombre: data.nombre,\n      honoraires: data.honoraires,\n      surfPropreProf: data.surfPropreProf,\n      surfCommuns: data.surfCommuns,\n      surfPraticien: data.surfPraticien,\n      numbSalariesETP: data.numbSalariesETP,\n      salaireBrut: data.salaireBrut,\n      coefSurfPraticienLoyer: (data.surfPraticien / pole.surfaceTotale).toFixed(\n        3\n      ),\n      coefSurfPraticienAutresCharge: (\n        data.surfPraticien /\n        (pole.surfaceTotale - pole.surfaceProfNonRepr)\n      ).toFixed(3),\n    };\n    dispatch(addSpecialite(pole._id, specialite));\n  };\n\n  useEffect(() => {\n    if (success) {\n      notify.show(\n        \"La spécialité a bien été ajoutée !\",\n        \"success\",\n        5000,\n        \"#0E1717\"\n      );\n      reset({});\n      dispatch(resetSuccessSpecialite());\n      dispatch(getAllSpecialites(pole._id));\n    }\n    return () => {};\n  }, [success]);\n\n  return (\n    <div className=\"modal-add-specialite\">\n      <form\n        id=\"form-add-specialite\"\n        className=\"form-add-specialite\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <Notifications />\n        <h2>Ajouter une spécialité</h2>\n        <div>\n          <label>Spécialité</label>\n          <input\n            name=\"name\"\n            className={errors.name && \"error\"}\n            placeholder=\"Ex. Médecin, dentiste..\"\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Nombre</label>\n          <input\n            name=\"nombre\"\n            className={errors.nombre && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Honoraires (€)</label>\n          <input\n            name=\"honoraires\"\n            className={errors.honoraires && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Surface propre par spécialité (m²)</label>\n          <input\n            name=\"surfPropreProf\"\n            className={errors.surfPropreProf && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Surface communs (m²)</label>\n          <input\n            name=\"surfCommuns\"\n            className={errors.surfCommuns && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Surface par praticien (m²)</label>\n          <input\n            name=\"surfPraticien\"\n            className={errors.surfPraticien && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Nombre de salariés en ETP</label>\n          <input\n            name=\"numbSalariesETP\"\n            className={errors.numbSalariesETP && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Salaire brut (€)</label>\n          <input\n            name=\"salaireBrut\"\n            className={errors.salaireBrut && \"error\"}\n            defaultValue={pole.salaire}\n            ref={register}\n          />\n        </div>\n        <button type=\"submit\" form=\"form-add-specialite\" value=\"\">\n          Valider\n        </button>\n      </form>\n      {loading && <LoadingSpinner />}\n      {error && <p className=\"danger\">{error}</p>}\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/SpecialiteItem.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalUpdateSpecialite.js",["206"],"import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notifications, { notify } from \"react-notify-toast\";\nimport {\n  getAllSpecialites,\n  resetSuccessSpecialite,\n  updateSpecialite,\n} from \"../../2-actions/specialiteActions\";\n\nexport default function ModalUpdateSpecialite({ specialite, pole }) {\n  const { register, handleSubmit, errors } = useForm();\n\n  const specialiteUpdated = useSelector((state) => state.specialiteUpdated);\n  const { success } = specialiteUpdated;\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    const specialiteUpdated = {\n      pole: pole._id,\n      name: data.name,\n      nombre: data.nombre,\n      honoraires: data.honoraires,\n      surfPropreProf: data.surfPropreProf,\n      surfCommuns: data.surfCommuns,\n      surfPraticien: data.surfPraticien,\n      numbSalariesETP: data.numbSalariesETP,\n      salaireBrut: data.salaireBrut,\n      coefSurfPraticienLoyer: (data.surfPraticien / pole.surfaceTotale).toFixed(\n        3\n      ),\n      coefSurfPraticienAutresCharge: (\n        data.surfPraticien /\n        (pole.surfaceTotale - pole.surfaceProfNonRepr)\n      ).toFixed(3),\n    };\n    dispatch(updateSpecialite(specialite._id, specialiteUpdated));\n  };\n\n  useEffect(() => {\n    if (success) {\n      notify.show(\n        \"Les modifications ont été enregistrées !\",\n        \"success\",\n        5000,\n        \"#0E1717\"\n      );\n      dispatch(resetSuccessSpecialite());\n      dispatch(getAllSpecialites(pole._id));\n    }\n    return () => {};\n  }, [success]);\n  return (\n    <div className=\"modal-update-specialite\">\n      <form\n        id=\"form-update-specialite\"\n        className=\"form-update-specialite\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <Notifications />\n        <h2>{specialite.name}</h2>\n        <div>\n          <label>Spécialité</label>\n          <input\n            name=\"name\"\n            className={errors.name && \"error\"}\n            defaultValue={specialite.name}\n            ref={register}\n          />\n          {errors.name && (\n            <span className=\"danger\">Merci de saisir une valeur.</span>\n          )}\n        </div>\n        <div>\n          <label>Nombre</label>\n          <input\n            name=\"nombre\"\n            className={errors.nombre && \"error\"}\n            defaultValue={specialite.nombre}\n            ref={register}\n          />\n          {errors.nombre && (\n            <span className=\"danger\">Merci de saisir une valeur.</span>\n          )}\n        </div>\n        <div>\n          <label>Honoraires (€)</label>\n          <input\n            name=\"honoraires\"\n            className={errors.honoraires && \"error\"}\n            defaultValue={specialite.honoraires}\n            ref={register}\n          />\n          {errors.honoraires && (\n            <span className=\"danger\">Merci de saisir une valeur.</span>\n          )}\n        </div>\n        <div>\n          <label>Surface propre par spécialité (m²)</label>\n          <input\n            name=\"surfPropreProf\"\n            className={errors.surfPropreProf && \"error\"}\n            defaultValue={specialite.surfPropreProf}\n            ref={register}\n          />\n          {errors.surfPropreProf && (\n            <span className=\"danger\">Merci de saisir une valeur.</span>\n          )}\n        </div>\n        <div>\n          <label>Surface communs (m²)</label>\n          <input\n            name=\"surfCommuns\"\n            className={errors.surfCommuns && \"error\"}\n            defaultValue={specialite.surfCommuns}\n            ref={register}\n          />\n          {errors.surfCommuns && (\n            <span className=\"danger\">Merci de saisir une valeur.</span>\n          )}\n        </div>\n        <div>\n          <label>Surface par praticien (m²)</label>\n          <input\n            name=\"surfPraticien\"\n            className={errors.surfPraticien && \"error\"}\n            defaultValue={specialite.surfPraticien}\n            ref={register}\n          />\n          {errors.surfPraticien && (\n            <span className=\"danger\">Merci de saisir une valeur.</span>\n          )}\n        </div>\n        <div>\n          <label>Nombre de salariés en ETP</label>\n          <input\n            name=\"numbSalariesETP\"\n            className={errors.numbSalariesETP && \"error\"}\n            defaultValue={specialite.numbSalariesETP}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Salaire brut (€)</label>\n          <input\n            name=\"salaireBrut\"\n            className={errors.salaireBrut && \"error\"}\n            defaultValue={pole.salaire}\n            ref={register}\n          />\n        </div>\n        <button type=\"submit\" form=\"form-update-specialite\" value=\"\">\n          Valider les modifications\n        </button>\n      </form>\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalUpdateDeclaration.js",["207"],"import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllDeclarations,\n  resetSuccessDeclaration,\n  updateDeclaration,\n} from \"../../2-actions/declarationActions\";\nimport Notifications, { notify } from \"react-notify-toast\";\n\nexport default function ModalUpdateDeclaration({ declaration, pole }) {\n  const { register, handleSubmit, errors } = useForm({});\n\n  const declarationUpdated = useSelector((state) => state.declarationUpdated);\n  const { success } = declarationUpdated;\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    const declarationUpdated = {\n      pole: pole._id,\n      loyer: {\n        total: data.loyer,\n        fixe: data.loyerFixe,\n        repartition: data.loyerRep,\n      },\n      electricite: {\n        total: data.electricite,\n        fixe: data.electriciteFixe,\n        repartition: data.electriciteRep,\n      },\n      eau: {\n        total: data.eau,\n        fixe: data.eauFixe,\n        repartition: data.eauRep,\n      },\n      fournAdmin: {\n        total: data.fournAdmin,\n        fixe: data.fournAdmin,\n        repartition: data.fournAdminRep,\n      },\n      fournEntr: {\n        total: data.fournEntr,\n        fixe: data.fournEntrFixe,\n        repartition: data.fournEntrRep,\n      },\n      menage: {\n        total: data.menage,\n        fixe: data.menageFixe,\n        repartition: data.menageRep,\n      },\n      assurance: {\n        total: data.assurance,\n        fixe: data.assuranceFixe,\n        repartition: data.assuranceRep,\n      },\n      honoraires: {\n        total: data.honoraires,\n        fixe: data.honorairesFixe,\n        repartition: data.honorairesRep,\n      },\n      annoncesInsertions: {\n        total: data.annoncesInsertions,\n        fixe: data.annoncesInsertionsFixe,\n        repartition: data.annoncesInsertionsRep,\n      },\n      fraisPostaux: {\n        total: data.fraisPostaux,\n        fixe: data.fraisPostauxFixe,\n        repartition: data.fraisPostauxRep,\n      },\n      internetTelephone: {\n        total: data.internetTelephone,\n        fixe: data.internetTelephoneFixe,\n        repartition: data.internetTelephoneRep,\n      },\n      fraisBancaires: {\n        total: data.fraisBancaires,\n        fixe: data.fraisBancairesFixe,\n        repartition: data.fraisBancairesRep,\n      },\n      cfe: {\n        total: data.cfe,\n        fixe: data.cfeFixe,\n        repartition: data.cfeRep,\n      },\n      receptionDeplacement: {\n        total: data.receptionDeplacement,\n        fixe: data.receptionDeplacementFixe,\n        repartition: data.receptionDeplacementRep,\n      },\n      petitEquipement: {\n        total: data.petitEquipement,\n        fixe: data.petitEquipementFixe,\n        repartition: data.petitEquipementRep,\n      },\n    };\n    dispatch(updateDeclaration(declaration._id, declarationUpdated));\n  };\n\n  useEffect(() => {\n    if (success) {\n      notify.show(\n        \"Les modifications ont été enregistrées !\",\n        \"success\",\n        1000,\n        \"#0E1717\"\n      );\n      dispatch(resetSuccessDeclaration());\n      dispatch(getAllDeclarations(pole._id));\n    }\n    return () => {};\n  }, [success]);\n  return (\n    <div className=\"modal-update-declaration\">\n      <form\n        id=\"form-update-declaration\"\n        className=\"form-update-declaration\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <Notifications />\n        <h2>Déclaration</h2>\n        <div>\n          <div>\n            <label>Loyer (€)</label>\n            <input\n              name=\"loyer\"\n              className={errors.loyer && \"error\"}\n              defaultValue={declaration.loyer.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"loyerFixe\"\n              className={errors.loyerFixe && \"error\"}\n              defaultValue={declaration.loyer.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"loyerRep\">Mode de répartition</label>\n            <select\n              name=\"loyerRep\"\n              id=\"loyerRep\"\n              defaultValue={declaration.loyer.repartition}\n              ref={register}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n        <div>\n          <div>\n            <label>Electricité (€)</label>\n            <input\n              name=\"electricite\"\n              className={errors.electricite && \"error\"}\n              defaultValue={declaration.electricite.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"electriciteFixe\"\n              className={errors.electriciteFixe && \"error\"}\n              defaultValue={declaration.electricite.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"electriciteRep\">Mode de répartition</label>\n            <select\n              name=\"electriciteRep\"\n              id=\"electriciteRep\"\n              ref={register}\n              defaultValue={declaration.electricite.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n        <div>\n          <div>\n            <label>Eau (€)</label>\n            <input\n              name=\"eau\"\n              className={errors.eau && \"error\"}\n              defaultValue={declaration.eau.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"eauFixe\"\n              className={errors.eauFixe && \"error\"}\n              defaultValue={declaration.eau.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"eauRep\">Mode de répartition</label>\n            <select\n              name=\"eauRep\"\n              id=\"eauRep\"\n              ref={register}\n              defaultValue={declaration.eau.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Fournitures administratives (€)</label>\n            <input\n              name=\"fournAdmin\"\n              className={errors.fournAdmin && \"error\"}\n              defaultValue={declaration.fournAdmin.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fournAdminFixe\"\n              className={errors.fournAdminFixe && \"error\"}\n              defaultValue={declaration.fournAdmin.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fournAdminRep\">Mode de répartition</label>\n            <select\n              name=\"fournAdminRep\"\n              id=\"fournAdminRep\"\n              ref={register}\n              defaultValue={declaration.fournAdmin.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Fournitures entretien (€)</label>\n            <input\n              name=\"fournEntr\"\n              className={errors.fournEntr && \"error\"}\n              defaultValue={declaration.fournEntr.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fournEntrFixe\"\n              className={errors.fournEntrFixe && \"error\"}\n              defaultValue={declaration.fournEntr.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fournEntrRep\">Mode de répartition</label>\n            <select\n              name=\"fournEntrRep\"\n              id=\"fournEntrRep\"\n              ref={register}\n              defaultValue={declaration.fournEntr.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Ménage/entretien et réparations (€)</label>\n            <input\n              name=\"menage\"\n              className={errors.menage && \"error\"}\n              defaultValue={declaration.menage.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"menageFixe\"\n              className={errors.menageFixe && \"error\"}\n              defaultValue={declaration.menage.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"menageRep\">Mode de répartition</label>\n            <select\n              name=\"menageRep\"\n              id=\"menageRep\"\n              ref={register}\n              defaultValue={declaration.menage.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Assurance (€)</label>\n            <input\n              name=\"assurance\"\n              className={errors.assurance && \"error\"}\n              defaultValue={declaration.assurance.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"assuranceFixe\"\n              className={errors.assuranceFixe && \"error\"}\n              defaultValue={declaration.assurance.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"assuranceRep\">Mode de répartition</label>\n            <select\n              name=\"assuranceRep\"\n              id=\"assuranceRep\"\n              ref={register}\n              defaultValue={declaration.assurance.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Honoraires (€)</label>\n            <input\n              name=\"honoraires\"\n              className={errors.honoraires && \"error\"}\n              defaultValue={declaration.honoraires.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"honorairesFixe\"\n              className={errors.honorairesFixe && \"error\"}\n              defaultValue={declaration.honoraires.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"honorairesRep\">Mode de répartition</label>\n            <select\n              name=\"honorairesRep\"\n              id=\"honorairesRep\"\n              ref={register}\n              defaultValue={declaration.honoraires.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Annonces et insertions (€)</label>\n            <input\n              name=\"annoncesInsertions\"\n              className={errors.annoncesInsertions && \"error\"}\n              defaultValue={declaration.annoncesInsertions.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"annoncesInsertionsFixe\"\n              className={errors.annoncesInsertionsFixe && \"error\"}\n              defaultValue={declaration.annoncesInsertions.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"annoncesInsertionsRep\">Mode de répartition</label>\n            <select\n              name=\"annoncesInsertionsRep\"\n              id=\"annoncesInsertionsRep\"\n              ref={register}\n              defaultValue={declaration.annoncesInsertions.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Frais postaux (€)</label>\n            <input\n              name=\"fraisPostaux\"\n              className={errors.fraisPostaux && \"error\"}\n              defaultValue={declaration.fraisPostaux.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fraisPostauxFixe\"\n              className={errors.fraisPostauxFixe && \"error\"}\n              defaultValue={declaration.fraisPostaux.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fraisPostauxRep\">Mode de répartition</label>\n            <select\n              name=\"fraisPostauxRep\"\n              id=\"fraisPostauxRep\"\n              ref={register}\n              defaultValue={declaration.fraisPostaux.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Internet et téléphone (€)</label>\n            <input\n              name=\"internetTelephone\"\n              className={errors.internetTelephone && \"error\"}\n              defaultValue={declaration.internetTelephone.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"internetTelephoneFixe\"\n              className={errors.internetTelephoneFixe && \"error\"}\n              defaultValue={declaration.internetTelephone.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"internetTelephoneRep\">Mode de répartition</label>\n            <select\n              name=\"internetTelephoneRep\"\n              id=\"internetTelephoneRep\"\n              ref={register}\n              defaultValue={declaration.internetTelephone.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Frais bancaires (€)</label>\n            <input\n              name=\"fraisBancaires\"\n              className={errors.fraisBancaires && \"error\"}\n              defaultValue={declaration.fraisBancaires.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fraisBancairesFixe\"\n              className={errors.fraisBancairesFixe && \"error\"}\n              defaultValue={declaration.fraisBancaires.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fraisBancairesRep\">Mode de répartition</label>\n            <select\n              name=\"fraisBancairesRep\"\n              id=\"fraisBancairesRep\"\n              ref={register}\n              defaultValue={declaration.fraisBancaires.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>CFE (€)</label>\n            <input\n              name=\"cfe\"\n              className={errors.cfe && \"error\"}\n              defaultValue={declaration.cfe.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"cfeFixe\"\n              className={errors.cfeFixe && \"error\"}\n              defaultValue={declaration.cfe.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"cfeRep\">Mode de répartition</label>\n            <select\n              name=\"cfeRep\"\n              id=\"cfeRep\"\n              ref={register}\n              defaultValue={declaration.cfe.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Réception/déplacement (€)</label>\n            <input\n              name=\"receptionDeplacement\"\n              className={errors.receptionDeplacement && \"error\"}\n              defaultValue={declaration.receptionDeplacement.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"receptionDeplacementFixe\"\n              className={errors.receptionDeplacementFixe && \"error\"}\n              defaultValue={declaration.receptionDeplacement.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"receptionDeplacementRep\">Mode de répartition</label>\n            <select\n              name=\"receptionDeplacementRep\"\n              id=\"receptionDeplacementRep\"\n              ref={register}\n              defaultValue={declaration.receptionDeplacement.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Petit équipement (€)</label>\n            <input\n              name=\"petitEquipement\"\n              className={errors.petitEquipement && \"error\"}\n              defaultValue={declaration.petitEquipement.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"petitEquipementFixe\"\n              className={errors.petitEquipementFixe && \"error\"}\n              defaultValue={declaration.petitEquipement.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"petitEquipementRep\">Mode de répartition</label>\n            <select\n              name=\"petitEquipementRep\"\n              id=\"petitEquipementRep\"\n              ref={register}\n              defaultValue={declaration.petitEquipement.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n        <button type=\"submit\" form=\"form-update-declaration\" value=\"\">\n          Valider les modifications\n        </button>\n      </form>\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddPole.js",["208"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { addPole } from \"../../2-actions/poleActions\";\nimport Notifications, { notify } from \"react-notify-toast\";\nimport LoadingSpinner from \"../components/LoadingSpinner.js\";\n\nexport default function ModalAddPole() {\n  const [surfTotale, setSurfaceTotale] = useState(0);\n  const [loyerAnnuel, setLoyerAnnuel] = useState(0);\n\n  const { register, handleSubmit, reset, errors } = useForm({});\n\n  const dispatch = useDispatch();\n\n  const poleAdd = useSelector((state) => state.poleAdd);\n  const { loading, success, error } = poleAdd;\n\n  const onSubmit = (data) => {\n    console.log(data);\n    const pole = {\n      name: data.name,\n      address: data.address,\n      postalCode: data.postalCode,\n      city: data.city,\n      surfaceTotale: data.surfaceTotale,\n      surfaceCommuns: data.surfaceCommuns,\n      repartitionSurfCommuns: data.repartitionSurfCommuns,\n      surfaceProfNonRepr: data.surfaceProfNonRepr,\n      repartitionSurfaceProfNonRepr: data.repartitionSurfaceProfNonRepr,\n      loyerAnnuel: data.loyerAnnuel,\n      loyerMensuelm2: (Number(loyerAnnuel / surfTotale) / 12).toFixed(2),\n      salaire: data.salaire,\n      chargesSociales: data.chargesSociales,\n    };\n    dispatch(addPole(pole));\n  };\n\n  useEffect(() => {\n    if (success) {\n      notify.show(\"Le pôle a bien été ajouté !\", \"success\", 5000, \"#0E1717\");\n      reset({});\n    }\n    return () => {};\n  }, [success]);\n\n  return (\n    <div className=\"modal-add-pole\">\n      <form\n        id=\"form-add-pole\"\n        className=\"form-add-pole\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <Notifications />\n        <h2>Infos générales</h2>\n        <div>\n          <label>Nom</label>\n          <input\n            name=\"name\"\n            className={errors.name && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Adresse</label>\n          <input\n            name=\"address\"\n            className={errors.address && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Code postal</label>\n          <input\n            name=\"postalCode\"\n            className={errors.postalCode && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Ville</label>\n          <input\n            name=\"city\"\n            className={errors.city && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <hr />\n        <h2>Surface</h2>\n        <div>\n          <label>Surface totale (m²)</label>\n          <input\n            name=\"surfaceTotale\"\n            className={errors.surfaceTotale && \"error\"}\n            value={surfTotale}\n            onChange={(e) => setSurfaceTotale(e.target.value)}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Loyer annuel (€)</label>\n          <input\n            name=\"loyerAnnuel\"\n            value={loyerAnnuel}\n            className={errors.loyerAnnuel && \"error\"}\n            onChange={(e) => {\n              setLoyerAnnuel(e.target.value);\n            }}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Surface communs (m²)</label>\n          <input\n            name=\"surfaceCommuns\"\n            className={errors.surfaceCommuns && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label for=\"repartitionSurfCommuns\">\n            Répartition surface communs\n          </label>\n          <select\n            name=\"repartitionSurfCommuns\"\n            id=\"repartitionSurfCommuns\"\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"surfacePropre\">% Surface propre</option>\n            <option value=\"recettes\">% Recettes</option>\n            <option value=\"bailleur\">100% Bailleur</option>\n            <option value=\"mg\">100% MG</option>\n          </select>\n        </div>\n        <div>\n          <label>Surface profession non représentée (m²)</label>\n          <input\n            name=\"surfaceProfNonRepr\"\n            className={errors.surfaceProfNonRepr && \"error\"}\n            defaultValue={0}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label for=\"repartitionSurfaceProfNonRepr\">\n            Répartition surface profession non représentée\n          </label>\n          <select\n            name=\"repartitionSurfaceProfNonRepr\"\n            id=\"repartitionSurfaceProfNonRepr\"\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"surfacePropre\">% Surface propre</option>\n            <option value=\"recettes\">% Recettes</option>\n            <option value=\"bailleur\">100% Bailleur</option>\n            <option value=\"mg\">100% MG</option>\n          </select>\n        </div>\n        <hr />\n        <h2>Employés</h2>\n        <div>\n          <label>Salaire brut (€)</label>\n          <input\n            name=\"salaire\"\n            className={errors.salaire && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Charges sociales (%)</label>\n          <input\n            name=\"chargesSociales\"\n            className={errors.chargesSociales && \"error\"}\n            defaultValue={20}\n            ref={register}\n          />\n        </div>\n        <button type=\"submit\" form=\"form-add-pole\" value=\"\">\n          Ajouter\n        </button>\n      </form>\n      {loading && <LoadingSpinner />}\n      {error && <p className=\"danger\">{error}</p>}\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/poleReducers.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/poleActions.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/specialiteReducers.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/specialiteActions.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/declarationReducers.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/declarationActions.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/utils.js",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":1,"column":21,"nodeType":"215","messageId":"216","endLine":1,"endColumn":29},{"ruleId":"213","severity":1,"message":"217","line":4,"column":8,"nodeType":"215","messageId":"216","endLine":4,"endColumn":13},{"ruleId":"218","severity":1,"message":"219","line":20,"column":5,"nodeType":"220","endLine":20,"endColumn":16,"suggestions":"221"},{"ruleId":"222","severity":1,"message":"223","line":63,"column":18,"nodeType":"224","endLine":63,"endColumn":32},{"ruleId":"222","severity":1,"message":"223","line":67,"column":18,"nodeType":"224","endLine":67,"endColumn":33},{"ruleId":"218","severity":1,"message":"225","line":33,"column":5,"nodeType":"220","endLine":33,"endColumn":12,"suggestions":"226"},{"ruleId":"222","severity":1,"message":"223","line":58,"column":18,"nodeType":"224","endLine":58,"endColumn":32},{"ruleId":"222","severity":1,"message":"223","line":62,"column":18,"nodeType":"224","endLine":62,"endColumn":33},{"ruleId":"213","severity":1,"message":"227","line":8,"column":16,"nodeType":"215","messageId":"216","endLine":8,"endColumn":24},{"ruleId":"213","severity":1,"message":"228","line":5,"column":26,"nodeType":"215","messageId":"216","endLine":5,"endColumn":36},{"ruleId":"213","severity":1,"message":"229","line":6,"column":10,"nodeType":"215","messageId":"216","endLine":6,"endColumn":25},{"ruleId":"213","severity":1,"message":"230","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":28},{"ruleId":"218","severity":1,"message":"231","line":25,"column":6,"nodeType":"220","endLine":25,"endColumn":15,"suggestions":"232"},{"ruleId":"218","severity":1,"message":"233","line":41,"column":6,"nodeType":"220","endLine":41,"endColumn":26,"suggestions":"234"},{"ruleId":"213","severity":1,"message":"235","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":14},{"ruleId":"213","severity":1,"message":"236","line":18,"column":23,"nodeType":"215","messageId":"216","endLine":18,"endColumn":37},{"ruleId":"218","severity":1,"message":"237","line":51,"column":6,"nodeType":"220","endLine":51,"endColumn":24,"suggestions":"238"},{"ruleId":"213","severity":1,"message":"239","line":5,"column":3,"nodeType":"215","messageId":"216","endLine":5,"endColumn":13},{"ruleId":"213","severity":1,"message":"240","line":6,"column":3,"nodeType":"215","messageId":"216","endLine":6,"endColumn":25},{"ruleId":"213","severity":1,"message":"241","line":10,"column":25,"nodeType":"215","messageId":"216","endLine":10,"endColumn":31},{"ruleId":"218","severity":1,"message":"242","line":29,"column":6,"nodeType":"220","endLine":29,"endColumn":15,"suggestions":"243"},{"ruleId":"213","severity":1,"message":"230","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":28},{"ruleId":"213","severity":1,"message":"244","line":16,"column":11,"nodeType":"215","messageId":"216","endLine":16,"endColumn":18},{"ruleId":"213","severity":1,"message":"245","line":16,"column":29,"nodeType":"215","messageId":"216","endLine":16,"endColumn":34},{"ruleId":"218","severity":1,"message":"246","line":99,"column":6,"nodeType":"220","endLine":99,"endColumn":15,"suggestions":"247"},{"ruleId":"213","severity":1,"message":"248","line":6,"column":8,"nodeType":"215","messageId":"216","endLine":6,"endColumn":29},{"ruleId":"218","severity":1,"message":"249","line":29,"column":6,"nodeType":"220","endLine":29,"endColumn":15,"suggestions":"250"},{"ruleId":"213","severity":1,"message":"214","line":1,"column":28,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"218","severity":1,"message":"246","line":58,"column":6,"nodeType":"220","endLine":58,"endColumn":15,"suggestions":"251"},{"ruleId":"218","severity":1,"message":"237","line":53,"column":6,"nodeType":"220","endLine":53,"endColumn":15,"suggestions":"252"},{"ruleId":"218","severity":1,"message":"237","line":113,"column":6,"nodeType":"220","endLine":113,"endColumn":15,"suggestions":"253"},{"ruleId":"218","severity":1,"message":"254","line":45,"column":6,"nodeType":"220","endLine":45,"endColumn":15,"suggestions":"255"},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["258"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.",["259"],"'setSteps' is assigned a value but never used.","'BsFileText' is defined but never used.","'RiLineChartLine' is defined but never used.","'IoMdArrowRoundBack' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["260"],"React Hook useEffect has missing dependencies: 'compteur', 'dispatch', and 'props.match.params.id'. Either include them or remove the dependency array. You can also do a functional update 'setCompteur(c => ...)' if you only need 'compteur' in the 'setCompteur' call.",["261"],"'Link' is defined but never used.","'setElectricite' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'pole._id'. Either include them or remove the dependency array.",["262"],"'getOnePole' is defined but never used.","'resetSuccessPoleUpdate' is defined but never used.","'notify' is defined but never used.","React Hook useEffect has missing dependencies: 'declarations', 'dispatch', and 'pole._id'. Either include them or remove the dependency array.",["263"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'pole._id', and 'reset'. Either include them or remove the dependency array.",["264"],"'ModalUpdateSpecialite' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'pole._id', and 'specialites'. Either include them or remove the dependency array.",["265"],["266"],["267"],["268"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["269"],"no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"282","fix":"286"},{"desc":"287","fix":"288"},{"desc":"287","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [props.history, userInfos]",{"range":"292","text":"293"},"Update the dependencies array to be: [error, success]",{"range":"294","text":"295"},"Update the dependencies array to be: [dispatch, success]",{"range":"296","text":"297"},"Update the dependencies array to be: [compteur, dispatch, poleUpdatedSuccess, props.match.params.id]",{"range":"298","text":"299"},"Update the dependencies array to be: [declarationRadio, dispatch, pole._id]",{"range":"300","text":"301"},"Update the dependencies array to be: [declarations, dispatch, pole._id, success]",{"range":"302","text":"303"},"Update the dependencies array to be: [dispatch, pole._id, reset, success]",{"range":"304","text":"305"},"Update the dependencies array to be: [dispatch, pole._id, specialites, success]",{"range":"306","text":"307"},{"range":"308","text":"305"},"Update the dependencies array to be: [dispatch, pole._id, success]",{"range":"309","text":"310"},{"range":"311","text":"310"},"Update the dependencies array to be: [reset, success]",{"range":"312","text":"313"},[517,528],"[props.history, userInfos]",[807,814],"[error, success]",[927,936],"[dispatch, success]",[1492,1512],"[compteur, dispatch, poleUpdatedSuccess, props.match.params.id]",[1611,1629],"[declarationRadio, dispatch, pole._id]",[1089,1098],"[declarations, dispatch, pole._id, success]",[2649,2658],"[dispatch, pole._id, reset, success]",[1144,1153],"[dispatch, pole._id, specialites, success]",[1718,1727],[1588,1597],"[dispatch, pole._id, success]",[3173,3182],[1527,1536],"[reset, success]"]