[{"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/index.js":"1","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/App.js":"2","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/store.js":"3","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/userReducers.js":"4","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/Auth_Page.js":"5","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/RegisterForm.js":"6","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/userActions.js":"7","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/SigninForm.js":"8","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/MessageBox.js":"9","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/LoadingSpinner.js":"10","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/user_pages/User_Dashboard.js":"11","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/StepsChecker.js":"12","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/user_pages/UserInfos_Page.js":"13","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/Dashboard.js":"14","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Dashboard.js":"15","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/5-brouillon/Test_page.js":"16","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/5-brouillon/Declaration_Page.js":"17","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Dashboard.js":"18","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/PoleItem.js":"19","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Page.js":"20","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/AdminPolePageMenu.js":"21","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Analyse.js":"22","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Infos.js":"23","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Declaration.js":"24","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/DeclarationItem.js":"25","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddDeclaration.js":"26","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Specialites.js":"27","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddSpecialite.js":"28","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/SpecialiteItem.js":"29","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalUpdateSpecialite.js":"30","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalUpdateDeclaration.js":"31","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddPole.js":"32","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/poleReducers.js":"33","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/poleActions.js":"34","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/specialiteReducers.js":"35","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/specialiteActions.js":"36","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/declarationReducers.js":"37","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/declarationActions.js":"38","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/utils.js":"39","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/tableTest.js":"40","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/TableChargesMensuellesFonct.js":"41"},{"size":292,"mtime":1612357950323,"results":"42","hashOfConfig":"43"},{"size":968,"mtime":1612873860878,"results":"44","hashOfConfig":"43"},{"size":1636,"mtime":1613065202232,"results":"45","hashOfConfig":"43"},{"size":753,"mtime":1612433442233,"results":"46","hashOfConfig":"43"},{"size":1062,"mtime":1612469706078,"results":"47","hashOfConfig":"43"},{"size":1851,"mtime":1612435003896,"results":"48","hashOfConfig":"43"},{"size":983,"mtime":1612971467492,"results":"49","hashOfConfig":"43"},{"size":1585,"mtime":1612434992176,"results":"50","hashOfConfig":"43"},{"size":138,"mtime":1612433227157,"results":"51","hashOfConfig":"43"},{"size":200,"mtime":1612434801973,"results":"52","hashOfConfig":"43"},{"size":1225,"mtime":1612874649135,"results":"53","hashOfConfig":"43"},{"size":875,"mtime":1612450986160,"results":"54","hashOfConfig":"43"},{"size":3040,"mtime":1612874510433,"results":"55","hashOfConfig":"43"},{"size":1131,"mtime":1612884342086,"results":"56","hashOfConfig":"43"},{"size":861,"mtime":1612883134491,"results":"57","hashOfConfig":"43"},{"size":9329,"mtime":1612874699707,"results":"58","hashOfConfig":"43"},{"size":7179,"mtime":1612874741690,"results":"59","hashOfConfig":"43"},{"size":2009,"mtime":1613085181311,"results":"60","hashOfConfig":"43"},{"size":247,"mtime":1612979209564,"results":"61","hashOfConfig":"43"},{"size":2746,"mtime":1613469321413,"results":"62","hashOfConfig":"43"},{"size":592,"mtime":1612989137216,"results":"63","hashOfConfig":"43"},{"size":9180,"mtime":1613599115155,"results":"64","hashOfConfig":"43"},{"size":8061,"mtime":1613580500366,"results":"65","hashOfConfig":"43"},{"size":2048,"mtime":1613153989794,"results":"66","hashOfConfig":"43"},{"size":1072,"mtime":1613232837687,"results":"67","hashOfConfig":"43"},{"size":20305,"mtime":1613240606244,"results":"68","hashOfConfig":"43"},{"size":2029,"mtime":1613154006409,"results":"69","hashOfConfig":"43"},{"size":4263,"mtime":1613637363829,"results":"70","hashOfConfig":"43"},{"size":1014,"mtime":1613083760257,"results":"71","hashOfConfig":"43"},{"size":4861,"mtime":1613637372850,"results":"72","hashOfConfig":"43"},{"size":22270,"mtime":1613255819546,"results":"73","hashOfConfig":"43"},{"size":7933,"mtime":1613580358320,"results":"74","hashOfConfig":"43"},{"size":1592,"mtime":1613085698931,"results":"75","hashOfConfig":"43"},{"size":1584,"mtime":1613065103374,"results":"76","hashOfConfig":"43"},{"size":1738,"mtime":1613064989644,"results":"77","hashOfConfig":"43"},{"size":1909,"mtime":1613414630548,"results":"78","hashOfConfig":"43"},{"size":1745,"mtime":1613234001623,"results":"79","hashOfConfig":"43"},{"size":1913,"mtime":1613070063963,"results":"80","hashOfConfig":"43"},{"size":7503,"mtime":1613642181428,"results":"81","hashOfConfig":"43"},{"size":94,"mtime":1613488752432,"results":"82","hashOfConfig":"43"},{"size":35039,"mtime":1613647098623,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"15dm4dx",{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/index.js",[],["182","183"],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/App.js",["184","185"],"import { useEffect, useState } from 'react';\nimport './4-css/App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Auth_Page from './3-pages/Auth_Page';\nimport Dashboard from './3-pages/Dashboard';\n\nfunction App() {\n\n/*   const getTest = async () => {\n    try {\n      const { data } = await axios.get('http://localhost:5000/api/auth/gettest',\n        {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('token')\n          }\n        }\n      );\n\n      console.log(data)\n    } catch (error) {\n      console.log(error.response.data)\n    }\n  } */\n\n  useEffect(() => {\n    return () => {\n    }\n  }, [])\n\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n        <header className=\"App-header\">\n          <Route path='/connexion' component={Auth_Page} />\n          <Route path='/dashboard' component={Dashboard}/>\n      </header>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/store.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/userReducers.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/Auth_Page.js",["186"],"import React, { useEffect, useState } from 'react'\nimport RegisterForm from './components/RegisterForm'\nimport '../4-css/Auth_Page.css'\nimport { useSelector } from 'react-redux'\nimport SigninForm from './components/SigninForm'\n\nexport default function Auth_Page(props) {\n\n\tconst [form, setForm] = useState('register');\n\n\tconst userLogin = useSelector(state => state.userLogin);\n\tconst { userInfos } = userLogin;\n\n\tuseEffect(() => {\n\t\tif (userInfos) {\n\t\t\tprops.history.push('/dashboard');\n\t\t}\n\t\treturn () => {\n\t\t}\n\t}, [userInfos])\n\n\treturn (\n\t\t<div className='auth_page'>\n\t\t\t<div className={'form-container ' + form}>\n\t\t\t\t<RegisterForm props={props} />\n\t\t\t\t\t\t<div className='btn-signin'>\n\t\t\t\t\t\t\t<label>Déjà un compte ?</label>\n\t\t\t\t\t\t\t<button className='' onClick={() => setForm('signin')}>Me connecter</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='btn-register'>\n\t\t\t\t\t\t\t<label>Pas encore de compte ?</label>\n\t\t\t\t\t\t\t<button className='' onClick={() => setForm('register')}>M'inscrire</button>\n\t\t\t\t\t\t</div>\t\n\t\t\t\t<SigninForm props={props}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/RegisterForm.js",["187","188"],"import React, { useEffect, useState } from 'react'\nimport { register } from '../../2-actions/userActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MessageBox from './MessageBox';\nimport LoadingSpinner from './LoadingSpinner';\n\nexport default function RegisterForm({ props }) {\n\n\tconst [name, setName] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [registerError, setRegisterError] = useState('');\n\n\tconst userRegister = useSelector(state => state.userRegister);\n\tconst { loading, success, error } = userRegister;\n\n\tconst dispatch = useDispatch()\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(register(name, email, password));\n\t}\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tsetRegisterError(error)\n\t\t}\n\t\tif (success) {\n\t\t\tsetName('');\n\t\t\tsetEmail('');\n\t\t\tsetPassword('');\n\t\t}\n\t\treturn () => {\n\t\t}\n\t}, [error, success])\n\n\treturn (\n\t\t<div>\n\t\t\t<form onChange={() => setRegisterError('')} className='form register' onSubmit={submitHandler}>\n\t\t\t\t<h2>Inscription</h2>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder='Nom' value={name} onChange={(e) => setName(e.target.value)} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder='Mot de passe' value={password} onChange={(e) => setPassword(e.target.value)}/>\n\t\t\t\t</div>\n\t\t\t\t<div className='validate-btn'>\n\t\t\t\t\t{\n\t\t\t\t\t\tloading ? \n\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<button>Valider</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className='message-container'>\n\t\t\t\t{\n\t\t\t\t\tregisterError &&\n\t\t\t\t\t<MessageBox style='danger' message={registerError}/>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tsuccess &&\n\t\t\t\t\t<MessageBox style='success' message='Votre compte a été créé.'/>\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/userActions.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/SigninForm.js",["189","190","191"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../2-actions/userActions';\nimport LoadingSpinner from './LoadingSpinner';\nimport MessageBox from './MessageBox';\n\nexport default function SigninForm() {\n\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [signinError, setSigninError] = useState('');\n\n\tconst userLogin = useSelector(state => state.userLogin);\n\tconst { loading, error, success } = userLogin;\n\n\tconst dispatch = useDispatch()\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(login(email, password))\n\t}\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tsetSigninError(error)\n\t\t}\n\t\tif (success) {\n\t\t\tsetEmail('')\n\t\t\tsetPassword('')\n\t\t}\n\t\treturn () => {\n\t\t}\n\t}, [error])\n\n\treturn (\n\t\t<div>\n\t\t\t<form className='form signin' onSubmit={submitHandler}>\n\t\t\t\t<h2>Connexion</h2>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input placeholder='Mot de passe' value={password} onChange={(e) => setPassword(e.target.value)}/>\n\t\t\t\t</div>\n\t\t\t\t<div className='validate-btn'>\n\t\t\t\t\t{\n\t\t\t\t\t\tloading ? \n\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<button>Valider</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className='message-container'>\n\t\t\t\t{\n\t\t\t\t\tsigninError &&\n\t\t\t\t\t<MessageBox style='danger' message={signinError}/>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tsuccess &&\n\t\t\t\t\t<MessageBox style='success' message='Vous êtes connecté.'/>\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/MessageBox.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/LoadingSpinner.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/user_pages/User_Dashboard.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/StepsChecker.js",["192"],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/user_pages/UserInfos_Page.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/Dashboard.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Dashboard.js",["193","194"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport '../../4-css/Dashboard.css'\nimport { VscAccount } from 'react-icons/vsc'\nimport { BsPencilSquare, BsFileText } from 'react-icons/bs'\nimport { RiLineChartLine } from 'react-icons/ri'\n\nexport default function Admin_Dashboard() {\n\treturn (\n\t\t<div className='admin-dashboard page'>\n\t\t\t<h1>Bonjour Youssef</h1>\n\t\t\t<div className='menu-container'>\n\t\t\t\t<div className='menu-item'>\n\t\t\t\t\t<Link to='/dashboard/admin/mon-compte'>\n\t\t\t\t\t\t<div className='icon-title'>\n\t\t\t\t\t\t\t<VscAccount size={80}/>\n\t\t\t\t\t\t\t<h6>Infos compte</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className='menu-item'>\n\t\t\t\t\t<Link to='/dashboard/admin/mes-poles'>\n\t\t\t\t\t<div className='icon-title'>\n\t\t\t\t\t\t<BsPencilSquare size={80}/>\n\t\t\t\t\t\t<h6>Mes pôles santé</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/5-brouillon/Test_page.js",["195"],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/5-brouillon/Declaration_Page.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Dashboard.js",["196"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport PoleItem from \"../components/PoleItem\";\nimport { FiPlus } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport ModalAddPole from \"../components/ModalAddPole\";\nimport ReactModal from \"react-modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllPole } from \"../../2-actions/poleActions\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nexport default function Admin_Pole_Dashboard(props) {\n  const [addPole, setAddPole] = useState(false);\n  const dispatch = useDispatch();\n\n  const allPolesGet = useSelector((state) => state.allPolesGet);\n  const { loading, poles, error } = allPolesGet;\n\n  const poleAdd = useSelector((state) => state.poleAdd);\n  const { success } = poleAdd;\n\n  useEffect(() => {\n    dispatch(getAllPole());\n    return () => {};\n  }, [success]);\n\n  return (\n    <div className=\"admin-pole-dashboard\">\n      {loading ? (\n        <LoadingSpinner />\n      ) : error ? (\n        <p className=\"danger\">{error}</p>\n      ) : (\n        <Fragment>\n          <ReactModal\n            isOpen={addPole}\n            className=\"Modal-add-pole\"\n            ariaHideApp={false}\n            overlayClassName=\"Overlay-add-pole\"\n            onRequestClose={() => setAddPole(!addPole)}\n          >\n            <ModalAddPole />\n          </ReactModal>\n          <div className=\"arrow-header\">\n            <Link to={\"/dashboard/admin/\"}>\n              <IoMdArrowRoundBack className=\"arrow-back\" size={40} />\n            </Link>\n            <h1>Liste des pôles</h1>\n          </div>\n          <div className=\"admin-pole-items-container\">\n            {poles.map((pole, i) => (\n              <PoleItem key={i} pole={pole} />\n            ))}\n            <div className=\"add-pole-item\" onClick={() => setAddPole(!addPole)}>\n              <FiPlus size={80} />\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/PoleItem.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Page.js",["197","198"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport AdminPolePageMenu from \"../components/AdminPolePageMenu\";\nimport Admin_Pole_Infos from \"./Admin_Pole_Infos\";\nimport Admin_Pole_Specialites from \"./Admin_Pole_Specialites\";\nimport Admin_Pole_Analyse from \"./Admin_Pole_Analyse\";\nimport Admin_Pole_Declaration from \"./Admin_Pole_Declaration\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getOnePole, resetSuccessPole } from \"../../2-actions/poleActions\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport Notifications, { notify } from \"react-notify-toast\";\nimport tableTest from \"./tableTest\";\n\nexport default function Admin_Pole_Page(props) {\n  let [compteur, setCompteur] = useState(0);\n\n  const poleSelected = useSelector((state) => state.poleSelected);\n  const { loading, pole, error } = poleSelected;\n\n  const poleUpdated = useSelector((state) => state.poleUpdated);\n  const { success: poleUpdatedSuccess } = poleUpdated;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (poleUpdatedSuccess) {\n      notify.show(\n        \"Les modifications ont été enregistrées !\",\n        \"success\",\n        2500,\n        \"#0E1717\"\n      );\n      dispatch(getOnePole(props.match.params.id));\n      dispatch(resetSuccessPole());\n    }\n    if (compteur < 1) {\n      dispatch(getOnePole(props.match.params.id));\n    }\n    setCompteur(compteur + 1);\n    return () => {};\n  }, [poleUpdatedSuccess]);\n  return (\n    <div className=\"admin-pole-page\">\n      <Notifications />\n      {loading ? (\n        <LoadingSpinner />\n      ) : error ? (\n        <p className=\"danger\">{error}</p>\n      ) : (\n        <Fragment>\n          <div className=\"arrow-header\">\n            <Link to={\"/dashboard/admin/mes-poles/\"}>\n              <IoMdArrowRoundBack className=\"arrow-back\" size={40} />\n            </Link>\n            <h1>{pole.name}</h1>\n          </div>\n          <div className=\"admin-pole-page-body\">\n            <AdminPolePageMenu pole={pole} />\n            <Route\n              path=\"/dashboard/admin/mes-poles/:id/infos\"\n              component={Admin_Pole_Infos}\n            />\n            <Route\n              path=\"/dashboard/admin/mes-poles/:id/declarations\"\n              component={Admin_Pole_Declaration}\n            />\n            <Route\n              path=\"/dashboard/admin/mes-poles/:id/specialites\"\n              component={Admin_Pole_Specialites}\n            />\n            <Route\n              path=\"/dashboard/admin/mes-poles/:id/analyse/:declarationId?\"\n              component={Admin_Pole_Analyse}\n            />\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/AdminPolePageMenu.js",["199"],"import React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\n\nexport default function AdminPolePageMenu({pole}) {\n\treturn (\n\t\t<ul className='admin-pole-page-menu'>\n\t\t\t<NavLink to={`/dashboard/admin/mes-poles/${pole._id}/infos`}><li>Infos générales</li></NavLink>\n\t\t\t<NavLink to={`/dashboard/admin/mes-poles/${pole._id}/declarations`}><li>Déclarations</li></NavLink>\n\t\t\t<NavLink to={`/dashboard/admin/mes-poles/${pole._id}/specialites`}><li>Spécialités</li></NavLink>\n\t\t\t<NavLink to={`/dashboard/admin/mes-poles/${pole._id}/analyse`}><li>Analyse</li></NavLink>\n\t\t</ul>\n\t)\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Analyse.js",["200","201","202"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllDeclarations,\n  getOneDeclaration,\n} from \"../../2-actions/declarationActions\";\nimport { getAllSpecialites } from \"../../2-actions/specialiteActions\";\nimport {\n  repartitionName,\n  calculRepartitionCharge,\n  calculRepartitionSurface,\n  calculRepartitionSurfaceNonRep,\n} from \"../../utils\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { formatDate } from \"../../utils\";\nimport { set } from \"mongoose\";\nimport TableChargesMensuellesFonct from \"../components/TableChargesMensuellesFonct\";\n\nexport default function Admin_Pole_Analyse(props) {\n  const poleSelected = useSelector((state) => state.poleSelected);\n  const { pole } = poleSelected;\n\n  const allSpecialitesGet = useSelector((state) => state.allSpecialitesGet);\n  const { loading, specialites, error } = allSpecialitesGet;\n\n  const allDeclarationsGet = useSelector((state) => state.allDeclarationsGet);\n  const {\n    loading: loadingDeclarations,\n    declarations,\n    error: errorDeclarations,\n  } = allDeclarationsGet;\n\n  const declarationSelected = useSelector((state) => state.declarationSelected);\n  const {\n    loading: loadingDeclaration,\n    declaration: declarationChoosed,\n    error: errorDeclaration,\n  } = declarationSelected;\n\n  const [declarationRadio, setDeclarationRadio] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!specialites) {\n      dispatch(getAllSpecialites(pole._id));\n    }\n    if (!declarations) {\n      dispatch(getAllDeclarations(pole._id));\n    }\n    if (declarationRadio) {\n      dispatch(getOneDeclaration(declarationRadio));\n    }\n    return () => {};\n  }, [declarationRadio]);\n\n  return loading || loadingDeclarations || loadingDeclaration ? (\n    <LoadingSpinner />\n  ) : error || errorDeclarations || errorDeclaration ? (\n    <p className=\"danger\">{error || errorDeclarations || errorDeclaration}</p>\n  ) : (\n    <div>\n      Analyse\n      <form>\n        {declarations.map((declaration, i) => (\n          <Fragment key={i}>\n            <input\n              type=\"radio\"\n              name=\"declaration\"\n              value={`${declaration._id}`}\n              checked={\n                declarationRadio &&\n                declarationChoosed &&\n                declaration._id === declarationChoosed._id\n                  ? true\n                  : false\n              }\n              onChange={() => setDeclarationRadio(declaration._id)}\n            />\n            <label htmlFor=\"declaration\">\n              Déclaration du {formatDate(declaration.date)}\n            </label>\n          </Fragment>\n        ))}\n      </form>\n      {declarationRadio && declarationChoosed ? (\n        <Fragment>\n          <table border=\"1\">\n            <thead>\n              <tr>\n                <th className=\"vide\"> </th>\n                <th> Total </th>\n                <th> Mode de répartition </th>\n                {specialites.map((specialite, i) => (\n                  <th key={i}>{specialite.name}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <th> Nombre </th>\n                <td>\n                  {specialites.reduce((totalValue, currentValue) => {\n                    return totalValue + currentValue.nombre;\n                  }, 0)}\n                </td>\n                <td className=\"vide\"> </td>\n                {specialites.map((specialite, i) => (\n                  <th key={i}>{specialite.nombre}</th>\n                ))}\n              </tr>\n              <tr>\n                <th> Recettes annuelles stat. </th>\n                <td>\n                  {Math.ceil(\n                    specialites.reduce((totalValue, currentValue) => {\n                      return (\n                        totalValue +\n                        currentValue.honoraires * currentValue.nombre\n                      );\n                    }, 0)\n                  )}\n                </td>\n                <td> Pour 1 praticien </td>\n                {specialites.map((specialite, i) => (\n                  <th key={i}>{specialite.honoraires}</th>\n                ))}\n              </tr>\n              <tr>\n                <th> Surface propre prof. </th>\n                <td>\n                  {Math.ceil(\n                    specialites.reduce((totalValue, currentValue) => {\n                      return totalValue + currentValue.surfPropreProf;\n                    }, 0)\n                  )}\n                </td>\n                <td> Par corps de métier </td>\n                {specialites.map((specialite, i) => (\n                  <th key={i}>{specialite.surfPropreProf}</th>\n                ))}\n              </tr>\n              <tr>\n                <th> Surface communs </th>\n                <td> {Math.ceil(pole.surfaceCommuns)} </td>\n                <td> {repartitionName(pole.repartitionSurfCommuns)} </td>\n                {specialites.map((specialite, i) => (\n                  <th key={i}>\n                    {calculRepartitionSurface(\n                      pole.repartitionSurfCommuns,\n                      pole.surfaceCommuns,\n                      specialite.surfPropreProf,\n                      Math.ceil(pole.surfaceTotale - pole.surfaceCommuns),\n                      specialite.honoraires,\n                      specialites.reduce((totalValue, currentValue) => {\n                        return (\n                          totalValue +\n                          currentValue.honoraires * currentValue.nombre\n                        );\n                      }, 0),\n                      specialites.reduce((totalValue, currentValue) => {\n                        return totalValue + currentValue.nombre;\n                      }, 0),\n                      specialite.nombre\n                    )}\n                  </th>\n                ))}\n              </tr>\n              <tr>\n                <th> Surface profession non représentée </th>\n                <td> {Math.ceil(pole.surfaceProfNonRepr)} </td>\n                <td> {repartitionName(pole.repartitionSurfaceProfNonRepr)} </td>\n                {specialites.map((specialite, i) => (\n                  <th key={i} className=\"vide\">\n                    {calculRepartitionSurfaceNonRep(\n                      pole.repartitionSurfaceProfNonRepr,\n                      specialite.surfaceCommuns,\n                      specialite.surfPropreProf,\n                      pole.surfaceProfNonRepr,\n                      pole.surfaceTotale,\n                      specialite.honoraires,\n                      specialites.reduce((totalValue, currentValue) => {\n                        return (\n                          totalValue +\n                          currentValue.honoraires * currentValue.nombre\n                        );\n                      }, 0),\n                      specialites.reduce((totalValue, currentValue) => {\n                        return totalValue + currentValue.nombre;\n                      }, 0),\n                      specialite.name,\n                      specialite.nombre\n                    )}\n                  </th>\n                ))}\n              </tr>\n              <tr>\n                <th> Surface totale </th>\n                <td> {Math.ceil(pole.surfaceTotale)} </td>\n                <td> Par corps de métier </td>\n                {specialites.map((specialite, i) => (\n                  <th key={i}>\n                    {(\n                      specialite.surfPropreProf + specialite.surfCommuns\n                    ).toFixed(2)}\n                  </th>\n                ))}\n              </tr>\n              <tr>\n                <th> Surface par praticien </th>\n                <td className=\"vide\"></td>\n                <td> Pour 1 praticien </td>\n                {specialites.map((specialite, i) => (\n                  <th key={i}>{specialite.surfPraticien.toFixed(2)}</th>\n                ))}\n              </tr>\n              <tr>\n                <th> Coef. surface par praticien pr répartition des loyers </th>\n                <td className=\"vide\"></td>\n                <td className=\"vide\"></td>\n                {specialites.map((specialite, i) => (\n                  <th key={i}>\n                    {(specialite.coefSurfPraticienLoyer * 100).toFixed(2) + \"%\"}\n                  </th>\n                ))}\n              </tr>\n              <tr>\n                <th>\n                  Coef. surface par praticien//surface facturée pr rép. autres\n                  charges\n                </th>\n                <td className=\"vide\"></td>\n                <td className=\"vide\"></td>\n                {specialites.map((specialite, i) => (\n                  <th key={i}>\n                    {(specialite.coefSurfPraticienAutresCharge * 100).toFixed(\n                      2\n                    ) + \"%\"}\n                  </th>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n\n          <TableChargesMensuellesFonct\n            pole={pole}\n            specialites={specialites}\n            declarationChoosed={declarationChoosed}\n          />\n        </Fragment>\n      ) : null}\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Infos.js",["203","204","205"],"import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getOnePole,\n  resetSuccessPoleUpdate,\n  updatePole,\n} from \"../../2-actions/poleActions\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport Notifications, { notify } from \"react-notify-toast\";\n\nexport default function Admin_Pole_Infos(props) {\n  const poleSelected = useSelector((state) => state.poleSelected);\n  const { pole } = poleSelected;\n\n  const poleUpdated = useSelector((state) => state.poleUpdated);\n  const { loading, error } = poleUpdated;\n\n  const { register, handleSubmit, errors } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    console.log(data);\n    const poleUpdated = {\n      name: data.name,\n      address: data.address,\n      postalCode: data.postalCode,\n      city: data.city,\n      surfaceTotale: data.surfaceTotale,\n      surfaceCommuns: data.surfaceCommuns,\n      repartitionSurfCommuns: data.repartitionSurfCommuns,\n      surfaceProfNonRepr: data.surfaceProfNonRepr,\n      repartitionSurfaceProfNonRepr: data.repartitionSurfaceProfNonRepr,\n      loyerAnnuel: data.loyerAnnuel,\n      loyerMensuelm2: (\n        Number(data.loyerAnnuel / data.surfaceTotale) / 12\n      ).toFixed(2),\n      salaire: data.salaire,\n      chargesSociales: data.chargesSociales,\n      repartitionSalaire: data.repartitionSalaire,\n      repartitionTaxeSalaires: data.repartitionTaxeSalaires,\n      repartitionRefChargeSisa: data.repartitionRefChargeSisa,\n    };\n    dispatch(updatePole(pole._id, poleUpdated));\n  };\n\n  useEffect(() => {\n    return () => {};\n  }, []);\n\n  return (\n    <div className=\"pole-infos-page\">\n      <Notifications />\n      <form\n        id=\"pole-infos-form\"\n        className=\"pole-infos-form\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <h2>Infos genérales</h2>\n        <div>\n          <label>Nom</label>\n          <input\n            name=\"name\"\n            className={errors.name && \"error\"}\n            defaultValue={pole.name}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Adresse</label>\n          <input\n            name=\"address\"\n            className={errors.address && \"error\"}\n            defaultValue={pole.address}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Code postal</label>\n          <input\n            name=\"postalCode\"\n            className={errors.postalCode && \"error\"}\n            defaultValue={pole.postalCode}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Ville</label>\n          <input\n            name=\"city\"\n            className={errors.city && \"error\"}\n            defaultValue={pole.city}\n            ref={register}\n          />\n        </div>\n        <hr />\n        <h2>Surface</h2>\n        <div>\n          <label>Surface totale (m²)</label>\n          <input\n            name=\"surfaceTotale\"\n            className={errors.surfaceTotale && \"error\"}\n            defaultValue={pole.surfaceTotale}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Loyer annuel (€)</label>\n          <input\n            name=\"loyerAnnuel\"\n            defaultValue={pole.loyerAnnuel}\n            className={errors.loyerAnnuel && \"error\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Surface communs (m²)</label>\n          <input\n            name=\"surfaceCommuns\"\n            className={errors.surfaceCommuns && \"error\"}\n            defaultValue={pole.surfaceCommuns}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"repartitionSurfCommuns\">\n            Répartition surface communs\n          </label>\n          <select\n            name=\"repartitionSurfCommuns\"\n            id=\"repartitionSurfCommuns\"\n            ref={register}\n            defaultValue={pole.repartitionSurfCommuns}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"surfacePropre\">% Surface propre</option>\n            <option value=\"recettes\">% Recettes</option>\n            <option value=\"bailleur\">100% Bailleur</option>\n            <option value=\"mg\">100% MG</option>\n          </select>\n        </div>\n        <div>\n          <label>Surface profession non représentée (m²)</label>\n          <input\n            name=\"surfaceProfNonRepr\"\n            className={errors.surfaceProfNonRepr && \"error\"}\n            defaultValue={pole.surfaceProfNonRepr}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"repartitionSurfaceProfNonRepr\">\n            Répartition surface profession non représentée\n          </label>\n          <select\n            name=\"repartitionSurfaceProfNonRepr\"\n            id=\"repartitionSurfaceProfNonRepr\"\n            defaultValue={pole.repartitionSurfaceProfNonRepr}\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"surfacePropre\">% Surface propre</option>\n            <option value=\"recettes\">% Recettes</option>\n            <option value=\"bailleur\">100% Bailleur</option>\n            <option value=\"mg\">100% MG</option>\n          </select>\n        </div>\n        <hr />\n        <h2>Employés</h2>\n        <div>\n          <label>Salaire brut (€)</label>\n          <input\n            name=\"salaire\"\n            className={errors.salaire && \"error\"}\n            defaultValue={pole.salaire}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"repartitionSalaire\">Répartition des salaires</label>\n          <select\n            name=\"repartitionSalaire\"\n            id=\"repartitionSalaire\"\n            defaultValue={pole.repartitionSalaire}\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"ponderation\">Pondération</option>\n            <option value=\"coefSurface\">Coef surface</option>\n            <option value=\"recettes\">% recettes</option>\n            <option value=\"libre\">Libre</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"repartitionTaxeSalaires\">\n            Répartition taxe sur salaires\n          </label>\n          <select\n            name=\"repartitionTaxeSalaires\"\n            id=\"repartitionTaxeSalaires\"\n            defaultValue={pole.repartitionTaxeSalaires}\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"ponderation\">Pondération</option>\n            <option value=\"coefSurface\">Coef surface</option>\n            <option value=\"recettes\">% recettes</option>\n            <option value=\"libre\">Libre</option>\n          </select>\n        </div>\n        <div>\n          <label>Charges sociales (%)</label>\n          <input\n            name=\"chargesSociales\"\n            className={errors.chargesSociales && \"error\"}\n            defaultValue={pole.chargesSociales}\n            ref={register}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"repartitionRefChargeSisa\">\n            Refacturation charges à la SISA (forfaitaire)\n          </label>\n          <select\n            name=\"repartitionRefChargeSisa\"\n            id=\"repartitionRefChargeSisa\"\n            defaultValue={pole.repartitionRefChargeSisa}\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"ponderation\">Pondération</option>\n            <option value=\"coefSurface\">Coef surface</option>\n            <option value=\"recettes\">% recettes</option>\n            <option value=\"libre\">Libre</option>\n          </select>\n        </div>\n\n        <button type=\"submit\" form=\"pole-infos-form\" value=\"\">\n          Valider les modifications\n        </button>\n      </form>\n      {loading && <LoadingSpinner />}\n      {error && <p className=\"danger\">{error}</p>}\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Declaration.js",["206"],"import React, { useEffect, useState } from \"react\";\nimport DeclarationItem from \"../components/DeclarationItem\";\nimport { FiPlus } from \"react-icons/fi\";\nimport ModalAddDeclaration from \"../components/ModalAddDeclaration\";\nimport ReactModal from \"react-modal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllDeclarations } from \"../../2-actions/declarationActions\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nexport default function Admin_Pole_Declaration() {\n  const allDeclarationsGet = useSelector((state) => state.allDeclarationsGet);\n  const { loading, declarations, error } = allDeclarationsGet;\n\n  const poleSelected = useSelector((state) => state.poleSelected);\n  const { pole } = poleSelected;\n\n  const declarationUpdated = useSelector((state) => state.declarationUpdated);\n  const { success } = declarationUpdated;\n\n  const [addDeclaration, setAddDeclaration] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!declarations) {\n      dispatch(getAllDeclarations(pole._id));\n    }\n    return () => {};\n  }, [success]);\n\n  return loading ? (\n    <LoadingSpinner />\n  ) : error ? (\n    <p className=\"danger\">{error}</p>\n  ) : (\n    <div className=\"admin-pole-declaration-page\">\n      <h2>Déclarations</h2>\n      {addDeclaration && (\n        <ReactModal\n          isOpen={addDeclaration}\n          className=\"Modal-add-declaration\"\n          ariaHideApp={false}\n          overlayClassName=\"Overlay-add-declaration\"\n          onRequestClose={() => setAddDeclaration(!addDeclaration)}\n        >\n          <ModalAddDeclaration pole={pole} />\n        </ReactModal>\n      )}\n      <div className=\"pole-declarations-items-container\">\n        {declarations.map((declaration, i) => (\n          <DeclarationItem key={i} declaration={declaration} pole={pole} />\n        ))}\n        <div\n          className=\"add-declaration-item\"\n          onClick={() => setAddDeclaration(!addDeclaration)}\n        >\n          <FiPlus size={80} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/DeclarationItem.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddDeclaration.js",["207","208","209","210"],"import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport {\n  addDeclaration,\n  getAllDeclarations,\n  resetSuccessDeclaration,\n} from \"../../2-actions/declarationActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Notifications, { notify } from \"react-notify-toast\";\n\nexport default function ModalAddDeclaration({ pole }) {\n  const { register, handleSubmit, reset, errors } = useForm({});\n\n  const declarationAdd = useSelector((state) => state.declarationAdd);\n  const { loading, success, error } = declarationAdd;\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    const declaration = {\n      loyer: {\n        total: data.loyer,\n        fixe: data.loyerFixe,\n        repartition: data.loyerRep,\n      },\n      electricite: {\n        total: data.electricite,\n        fixe: data.electriciteFixe,\n        repartition: data.electriciteRep,\n      },\n      eau: {\n        total: data.eau,\n        fixe: data.eauFixe,\n        repartition: data.eauRep,\n      },\n      fournAdmin: {\n        total: data.fournAdmin,\n        fixe: data.fournAdmin,\n        repartition: data.fournAdminRep,\n      },\n      fournEntr: {\n        total: data.fournEntr,\n        fixe: data.fournEntrFixe,\n        repartition: data.fournEntrRep,\n      },\n      menage: {\n        total: data.menage,\n        fixe: data.menageFixe,\n        repartition: data.menageRep,\n      },\n      assurance: {\n        total: data.assurance,\n        fixe: data.assuranceFixe,\n        repartition: data.assuranceRep,\n      },\n      honoraires: {\n        total: data.honoraires,\n        fixe: data.honorairesFixe,\n        repartition: data.honorairesRep,\n      },\n      annoncesInsertions: {\n        total: data.annoncesInsertions,\n        fixe: data.annoncesInsertionsFixe,\n        repartition: data.annoncesInsertionsRep,\n      },\n      fraisPostaux: {\n        total: data.fraisPostaux,\n        fixe: data.fraisPostauxFixe,\n        repartition: data.fraisPostauxRep,\n      },\n      internetTelephone: {\n        total: data.internetTelephone,\n        fixe: data.internetTelephoneFixe,\n        repartition: data.internetTelephoneRep,\n      },\n      fraisBancaires: {\n        total: data.fraisBancaires,\n        fixe: data.fraisBancairesFixe,\n        repartition: data.fraisBancairesRep,\n      },\n      cfe: {\n        total: data.cfe,\n        fixe: data.cfeFixe,\n        repartition: data.cfeRep,\n      },\n      receptionDeplacement: {\n        total: data.receptionDeplacement,\n        fixe: data.receptionDeplacementFixe,\n        repartition: data.receptionDeplacementRep,\n      },\n      petitEquipement: {\n        total: data.petitEquipement,\n        fixe: data.petitEquipementFixe,\n        repartition: data.petitEquipementRep,\n      },\n    };\n    dispatch(addDeclaration(pole._id, declaration));\n  };\n\n  useEffect(() => {\n    if (success) {\n      notify.show(\n        \"La déclaration a bien été créée !\",\n        \"success\",\n        2000,\n        \"#0E1717\"\n      );\n      reset({});\n      dispatch(resetSuccessDeclaration());\n      dispatch(getAllDeclarations(pole._id));\n    }\n    return () => {};\n  }, [success]);\n\n  return (\n    <div className=\"modal-add-declaration\">\n      <Notifications />\n      <form\n        id=\"form-add-declaration\"\n        className=\"form-add-declaration\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <h2>Déclaration</h2>\n        <div>\n          <div>\n            <label>Loyer (€)</label>\n            <input\n              name=\"loyer\"\n              className={errors.loyer && \"error\"}\n              defaultValue={\"\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"loyerFixe\"\n              className={errors.loyerFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"loyerRep\">Mode de répartition</label>\n            <select\n              name=\"loyerRep\"\n              id=\"loyerRep\"\n              defaultValue=\"coefSurface\"\n              ref={register}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n        <div>\n          <div>\n            <label>Electricité (€)</label>\n            <input\n              name=\"electricite\"\n              className={errors.electricite && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"electriciteFixe\"\n              className={errors.electriciteFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"electriciteRep\">Mode de répartition</label>\n            <select\n              name=\"electriciteRep\"\n              id=\"electriciteRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n        <div>\n          <div>\n            <label>Eau (€)</label>\n            <input\n              name=\"eau\"\n              className={errors.eau && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"eauFixe\"\n              className={errors.eauFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"eauRep\">Mode de répartition</label>\n            <select\n              name=\"eauRep\"\n              id=\"eauRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Fournitures administratives (€)</label>\n            <input\n              name=\"fournAdmin\"\n              className={errors.fournAdmin && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fournAdminFixe\"\n              className={errors.fournAdminFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fournAdminRep\">Mode de répartition</label>\n            <select\n              name=\"fournAdminRep\"\n              id=\"fournAdminRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Fournitures entretien (€)</label>\n            <input\n              name=\"fournEntr\"\n              className={errors.fournEntr && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fournEntrFixe\"\n              className={errors.fournEntrFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fournEntrRep\">Mode de répartition</label>\n            <select\n              name=\"fournEntrRep\"\n              id=\"fournEntrRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Ménage/entretien et réparations (€)</label>\n            <input\n              name=\"menage\"\n              className={errors.menage && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"menageFixe\"\n              className={errors.menageFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"menageRep\">Mode de répartition</label>\n            <select\n              name=\"menageRep\"\n              id=\"menageRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Assurance (€)</label>\n            <input\n              name=\"assurance\"\n              className={errors.assurance && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"assuranceFixe\"\n              className={errors.assuranceFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"assuranceRep\">Mode de répartition</label>\n            <select\n              name=\"assuranceRep\"\n              id=\"assuranceRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Honoraires (€)</label>\n            <input\n              name=\"honoraires\"\n              className={errors.honoraires && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"honorairesFixe\"\n              className={errors.honorairesFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"honorairesRep\">Mode de répartition</label>\n            <select\n              name=\"honorairesRep\"\n              id=\"honorairesRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Annonces et insertions (€)</label>\n            <input\n              name=\"annoncesInsertions\"\n              className={errors.annoncesInsertions && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"annoncesInsertionsFixe\"\n              className={errors.annoncesInsertionsFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"annoncesInsertionsRep\">Mode de répartition</label>\n            <select\n              name=\"annoncesInsertionsRep\"\n              id=\"annoncesInsertionsRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Frais postaux (€)</label>\n            <input\n              name=\"fraisPostaux\"\n              className={errors.fraisPostaux && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fraisPostauxFixe\"\n              className={errors.fraisPostauxFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fraisPostauxRep\">Mode de répartition</label>\n            <select\n              name=\"fraisPostauxRep\"\n              id=\"fraisPostauxRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Internet et téléphone (€)</label>\n            <input\n              name=\"internetTelephone\"\n              className={errors.internetTelephone && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"internetTelephoneFixe\"\n              className={errors.internetTelephoneFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"internetTelephoneRep\">Mode de répartition</label>\n            <select\n              name=\"internetTelephoneRep\"\n              id=\"internetTelephoneRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Frais bancaires (€)</label>\n            <input\n              name=\"fraisBancaires\"\n              className={errors.fraisBancaires && \"error\"}\n              defaultValue={\"\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fraisBancairesFixe\"\n              className={errors.fraisBancairesFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fraisBancairesRep\">Mode de répartition</label>\n            <select\n              name=\"fraisBancairesRep\"\n              id=\"fraisBancairesRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>CFE (€)</label>\n            <input\n              name=\"cfe\"\n              className={errors.cfe && \"error\"}\n              defaultValue={\"\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"cfeFixe\"\n              className={errors.cfeFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"cfeRep\">Mode de répartition</label>\n            <select\n              name=\"cfeRep\"\n              id=\"cfeRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Réception/déplacement (€)</label>\n            <input\n              name=\"receptionDeplacement\"\n              className={errors.receptionDeplacement && \"error\"}\n              defaultValue={\"\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"receptionDeplacementFixe\"\n              className={errors.receptionDeplacementFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"receptionDeplacementRep\">Mode de répartition</label>\n            <select\n              name=\"receptionDeplacementRep\"\n              id=\"receptionDeplacementRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Petit équipement (€)</label>\n            <input\n              name=\"petitEquipement\"\n              className={errors.petitEquipement && \"error\"}\n              defaultValue={\"\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"petitEquipementFixe\"\n              className={errors.petitEquipementFixe && \"error\"}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"petitEquipementRep\">Mode de répartition</label>\n            <select\n              name=\"petitEquipementRep\"\n              id=\"petitEquipementRep\"\n              ref={register}\n              defaultValue=\"ponderation\"\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <button type=\"submit\" form=\"form-add-declaration\" value=\"\">\n          Valider\n        </button>\n      </form>\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/Admin_Pole_Specialites.js",["211","212"],"import React, { useEffect, useState } from \"react\";\nimport { FiPlus } from \"react-icons/fi\";\nimport ModalAddSpecialite from \"../components/ModalAddSpecialite\";\nimport ReactModal from \"react-modal\";\nimport SpecialiteItem from \"../components/SpecialiteItem\";\nimport ModalUpdateSpecialite from \"../components/ModalUpdateSpecialite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { getAllSpecialites } from \"../../2-actions/specialiteActions\";\n\nexport default function Admin_Pole_Specialites() {\n  const poleSelected = useSelector((state) => state.poleSelected);\n  const { pole } = poleSelected;\n\n  const specialiteUpdated = useSelector((state) => state.specialiteUpdated);\n  const { success } = specialiteUpdated;\n\n  const allSpecialitesGet = useSelector((state) => state.allSpecialitesGet);\n  const { loading, specialites, error } = allSpecialitesGet;\n\n  const [addSpecialite, setAddSpecialite] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!specialites) {\n      dispatch(getAllSpecialites(pole._id));\n    }\n    return () => {};\n  }, [success]);\n\n  return loading ? (\n    <LoadingSpinner />\n  ) : error ? (\n    <p className=\"danger\">{error}</p>\n  ) : (\n    <div className=\"admin-pole-specialites-page\">\n      <h2>Liste spécialités</h2>\n      <ReactModal\n        isOpen={addSpecialite}\n        className=\"Modal-add-specialite\"\n        ariaHideApp={false}\n        overlayClassName=\"Overlay-add-specialite\"\n        onRequestClose={() => setAddSpecialite(!addSpecialite)}\n      >\n        <ModalAddSpecialite />\n      </ReactModal>\n      <div className=\"pole-specialites-items-container\">\n        {specialites.map((specialite, i) => (\n          <SpecialiteItem key={i} specialite={specialite} pole={pole} />\n        ))}\n\n        <div\n          className=\"add-specialite-item\"\n          onClick={() => setAddSpecialite(!addSpecialite)}\n        >\n          <FiPlus size={80} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddSpecialite.js",["213","214"],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/SpecialiteItem.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalUpdateSpecialite.js",["215"],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalUpdateDeclaration.js",["216"],"import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllDeclarations,\n  resetSuccessDeclaration,\n  updateDeclaration,\n} from \"../../2-actions/declarationActions\";\nimport Notifications, { notify } from \"react-notify-toast\";\n\nexport default function ModalUpdateDeclaration({ declaration, pole }) {\n  const { register, handleSubmit, errors } = useForm({});\n\n  const declarationUpdated = useSelector((state) => state.declarationUpdated);\n  const { success } = declarationUpdated;\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    const declarationUpdated = {\n      pole: pole._id,\n      loyer: {\n        total: data.loyer,\n        fixe: data.loyerFixe,\n        repartition: data.loyerRep,\n      },\n      electricite: {\n        total: data.electricite,\n        fixe: data.electriciteFixe,\n        repartition: data.electriciteRep,\n      },\n      eau: {\n        total: data.eau,\n        fixe: data.eauFixe,\n        repartition: data.eauRep,\n      },\n      fournAdmin: {\n        total: data.fournAdmin,\n        fixe: data.fournAdmin,\n        repartition: data.fournAdminRep,\n      },\n      fournEntr: {\n        total: data.fournEntr,\n        fixe: data.fournEntrFixe,\n        repartition: data.fournEntrRep,\n      },\n      menage: {\n        total: data.menage,\n        fixe: data.menageFixe,\n        repartition: data.menageRep,\n      },\n      assurance: {\n        total: data.assurance,\n        fixe: data.assuranceFixe,\n        repartition: data.assuranceRep,\n      },\n      honoraires: {\n        total: data.honoraires,\n        fixe: data.honorairesFixe,\n        repartition: data.honorairesRep,\n      },\n      annoncesInsertions: {\n        total: data.annoncesInsertions,\n        fixe: data.annoncesInsertionsFixe,\n        repartition: data.annoncesInsertionsRep,\n      },\n      fraisPostaux: {\n        total: data.fraisPostaux,\n        fixe: data.fraisPostauxFixe,\n        repartition: data.fraisPostauxRep,\n      },\n      internetTelephone: {\n        total: data.internetTelephone,\n        fixe: data.internetTelephoneFixe,\n        repartition: data.internetTelephoneRep,\n      },\n      fraisBancaires: {\n        total: data.fraisBancaires,\n        fixe: data.fraisBancairesFixe,\n        repartition: data.fraisBancairesRep,\n      },\n      cfe: {\n        total: data.cfe,\n        fixe: data.cfeFixe,\n        repartition: data.cfeRep,\n      },\n      receptionDeplacement: {\n        total: data.receptionDeplacement,\n        fixe: data.receptionDeplacementFixe,\n        repartition: data.receptionDeplacementRep,\n      },\n      petitEquipement: {\n        total: data.petitEquipement,\n        fixe: data.petitEquipementFixe,\n        repartition: data.petitEquipementRep,\n      },\n    };\n    dispatch(updateDeclaration(declaration._id, declarationUpdated));\n  };\n\n  useEffect(() => {\n    if (success) {\n      notify.show(\n        \"Les modifications ont été enregistrées !\",\n        \"success\",\n        1000,\n        \"#0E1717\"\n      );\n      dispatch(resetSuccessDeclaration());\n      dispatch(getAllDeclarations(pole._id));\n    }\n    return () => {};\n  }, [success]);\n  return (\n    <div className=\"modal-update-declaration\">\n      <form\n        id=\"form-update-declaration\"\n        className=\"form-update-declaration\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <Notifications />\n        <h2>Déclaration</h2>\n        <div>\n          <div>\n            <label>Loyer (€)</label>\n            <input\n              name=\"loyer\"\n              className={errors.loyer && \"error\"}\n              defaultValue={declaration.loyer.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"loyerFixe\"\n              className={errors.loyerFixe && \"error\"}\n              defaultValue={declaration.loyer.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"loyerRep\">Mode de répartition</label>\n            <select\n              name=\"loyerRep\"\n              id=\"loyerRep\"\n              defaultValue={declaration.loyer.repartition}\n              ref={register}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n        <div>\n          <div>\n            <label>Electricité (€)</label>\n            <input\n              name=\"electricite\"\n              className={errors.electricite && \"error\"}\n              defaultValue={declaration.electricite.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"electriciteFixe\"\n              className={errors.electriciteFixe && \"error\"}\n              defaultValue={declaration.electricite.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"electriciteRep\">Mode de répartition</label>\n            <select\n              name=\"electriciteRep\"\n              id=\"electriciteRep\"\n              ref={register}\n              defaultValue={declaration.electricite.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n        <div>\n          <div>\n            <label>Eau (€)</label>\n            <input\n              name=\"eau\"\n              className={errors.eau && \"error\"}\n              defaultValue={declaration.eau.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"eauFixe\"\n              className={errors.eauFixe && \"error\"}\n              defaultValue={declaration.eau.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"eauRep\">Mode de répartition</label>\n            <select\n              name=\"eauRep\"\n              id=\"eauRep\"\n              ref={register}\n              defaultValue={declaration.eau.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Fournitures administratives (€)</label>\n            <input\n              name=\"fournAdmin\"\n              className={errors.fournAdmin && \"error\"}\n              defaultValue={declaration.fournAdmin.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fournAdminFixe\"\n              className={errors.fournAdminFixe && \"error\"}\n              defaultValue={declaration.fournAdmin.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fournAdminRep\">Mode de répartition</label>\n            <select\n              name=\"fournAdminRep\"\n              id=\"fournAdminRep\"\n              ref={register}\n              defaultValue={declaration.fournAdmin.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Fournitures entretien (€)</label>\n            <input\n              name=\"fournEntr\"\n              className={errors.fournEntr && \"error\"}\n              defaultValue={declaration.fournEntr.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fournEntrFixe\"\n              className={errors.fournEntrFixe && \"error\"}\n              defaultValue={declaration.fournEntr.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fournEntrRep\">Mode de répartition</label>\n            <select\n              name=\"fournEntrRep\"\n              id=\"fournEntrRep\"\n              ref={register}\n              defaultValue={declaration.fournEntr.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Ménage/entretien et réparations (€)</label>\n            <input\n              name=\"menage\"\n              className={errors.menage && \"error\"}\n              defaultValue={declaration.menage.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"menageFixe\"\n              className={errors.menageFixe && \"error\"}\n              defaultValue={declaration.menage.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"menageRep\">Mode de répartition</label>\n            <select\n              name=\"menageRep\"\n              id=\"menageRep\"\n              ref={register}\n              defaultValue={declaration.menage.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Assurance (€)</label>\n            <input\n              name=\"assurance\"\n              className={errors.assurance && \"error\"}\n              defaultValue={declaration.assurance.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"assuranceFixe\"\n              className={errors.assuranceFixe && \"error\"}\n              defaultValue={declaration.assurance.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"assuranceRep\">Mode de répartition</label>\n            <select\n              name=\"assuranceRep\"\n              id=\"assuranceRep\"\n              ref={register}\n              defaultValue={declaration.assurance.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Honoraires (€)</label>\n            <input\n              name=\"honoraires\"\n              className={errors.honoraires && \"error\"}\n              defaultValue={declaration.honoraires.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"honorairesFixe\"\n              className={errors.honorairesFixe && \"error\"}\n              defaultValue={declaration.honoraires.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"honorairesRep\">Mode de répartition</label>\n            <select\n              name=\"honorairesRep\"\n              id=\"honorairesRep\"\n              ref={register}\n              defaultValue={declaration.honoraires.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Annonces et insertions (€)</label>\n            <input\n              name=\"annoncesInsertions\"\n              className={errors.annoncesInsertions && \"error\"}\n              defaultValue={declaration.annoncesInsertions.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"annoncesInsertionsFixe\"\n              className={errors.annoncesInsertionsFixe && \"error\"}\n              defaultValue={declaration.annoncesInsertions.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"annoncesInsertionsRep\">Mode de répartition</label>\n            <select\n              name=\"annoncesInsertionsRep\"\n              id=\"annoncesInsertionsRep\"\n              ref={register}\n              defaultValue={declaration.annoncesInsertions.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Frais postaux (€)</label>\n            <input\n              name=\"fraisPostaux\"\n              className={errors.fraisPostaux && \"error\"}\n              defaultValue={declaration.fraisPostaux.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fraisPostauxFixe\"\n              className={errors.fraisPostauxFixe && \"error\"}\n              defaultValue={declaration.fraisPostaux.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fraisPostauxRep\">Mode de répartition</label>\n            <select\n              name=\"fraisPostauxRep\"\n              id=\"fraisPostauxRep\"\n              ref={register}\n              defaultValue={declaration.fraisPostaux.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Internet et téléphone (€)</label>\n            <input\n              name=\"internetTelephone\"\n              className={errors.internetTelephone && \"error\"}\n              defaultValue={declaration.internetTelephone.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"internetTelephoneFixe\"\n              className={errors.internetTelephoneFixe && \"error\"}\n              defaultValue={declaration.internetTelephone.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"internetTelephoneRep\">Mode de répartition</label>\n            <select\n              name=\"internetTelephoneRep\"\n              id=\"internetTelephoneRep\"\n              ref={register}\n              defaultValue={declaration.internetTelephone.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Frais bancaires (€)</label>\n            <input\n              name=\"fraisBancaires\"\n              className={errors.fraisBancaires && \"error\"}\n              defaultValue={declaration.fraisBancaires.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"fraisBancairesFixe\"\n              className={errors.fraisBancairesFixe && \"error\"}\n              defaultValue={declaration.fraisBancaires.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fraisBancairesRep\">Mode de répartition</label>\n            <select\n              name=\"fraisBancairesRep\"\n              id=\"fraisBancairesRep\"\n              ref={register}\n              defaultValue={declaration.fraisBancaires.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>CFE (€)</label>\n            <input\n              name=\"cfe\"\n              className={errors.cfe && \"error\"}\n              defaultValue={declaration.cfe.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"cfeFixe\"\n              className={errors.cfeFixe && \"error\"}\n              defaultValue={declaration.cfe.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"cfeRep\">Mode de répartition</label>\n            <select\n              name=\"cfeRep\"\n              id=\"cfeRep\"\n              ref={register}\n              defaultValue={declaration.cfe.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Réception/déplacement (€)</label>\n            <input\n              name=\"receptionDeplacement\"\n              className={errors.receptionDeplacement && \"error\"}\n              defaultValue={declaration.receptionDeplacement.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"receptionDeplacementFixe\"\n              className={errors.receptionDeplacementFixe && \"error\"}\n              defaultValue={declaration.receptionDeplacement.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"receptionDeplacementRep\">Mode de répartition</label>\n            <select\n              name=\"receptionDeplacementRep\"\n              id=\"receptionDeplacementRep\"\n              ref={register}\n              defaultValue={declaration.receptionDeplacement.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <label>Petit équipement (€)</label>\n            <input\n              name=\"petitEquipement\"\n              className={errors.petitEquipement && \"error\"}\n              defaultValue={declaration.petitEquipement.total}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label>Dont fixe (€)</label>\n            <input\n              name=\"petitEquipementFixe\"\n              className={errors.petitEquipementFixe && \"error\"}\n              defaultValue={declaration.petitEquipement.fixe}\n              ref={register}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"petitEquipementRep\">Mode de répartition</label>\n            <select\n              name=\"petitEquipementRep\"\n              id=\"petitEquipementRep\"\n              ref={register}\n              defaultValue={declaration.petitEquipement.repartition}\n            >\n              <option value=\"coefSurface\">Coef surface</option>\n              <option value=\"partsEgales\">Parts égales</option>\n              <option value=\"ponderation\">Pondération</option>\n              <option value=\"recettes\">% recettes</option>\n              <option value=\"libre\">Libre</option>\n            </select>\n          </div>\n        </div>\n        <button type=\"submit\" form=\"form-update-declaration\" value=\"\">\n          Valider les modifications\n        </button>\n      </form>\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/ModalAddPole.js",["217"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { addPole } from \"../../2-actions/poleActions\";\nimport Notifications, { notify } from \"react-notify-toast\";\nimport LoadingSpinner from \"../components/LoadingSpinner.js\";\n\nexport default function ModalAddPole() {\n  const [surfTotale, setSurfaceTotale] = useState(0);\n  const [loyerAnnuel, setLoyerAnnuel] = useState(0);\n\n  const { register, handleSubmit, reset, errors } = useForm({});\n\n  const dispatch = useDispatch();\n\n  const poleAdd = useSelector((state) => state.poleAdd);\n  const { loading, success, error } = poleAdd;\n\n  const onSubmit = (data) => {\n    console.log(data);\n    const pole = {\n      name: data.name,\n      address: data.address,\n      postalCode: data.postalCode,\n      city: data.city,\n      surfaceTotale: data.surfaceTotale,\n      surfaceCommuns: data.surfaceCommuns,\n      repartitionSurfCommuns: data.repartitionSurfCommuns,\n      surfaceProfNonRepr: data.surfaceProfNonRepr,\n      repartitionSurfaceProfNonRepr: data.repartitionSurfaceProfNonRepr,\n      loyerAnnuel: data.loyerAnnuel,\n      loyerMensuelm2: (Number(loyerAnnuel / surfTotale) / 12).toFixed(2),\n      salaire: data.salaire,\n      chargesSociales: data.chargesSociales,\n      repartitionSalaire: data.repartitionSalaire,\n      repartitionTaxeSalaires: data.repartitionTaxeSalaires,\n      repartitionRefChargeSisa: data.repartitionRefChargeSisa,\n    };\n    dispatch(addPole(pole));\n  };\n\n  useEffect(() => {\n    if (success) {\n      notify.show(\"Le pôle a bien été ajouté !\", \"success\", 5000, \"#0E1717\");\n      reset({});\n    }\n    return () => {};\n  }, [success]);\n\n  return (\n    <div className=\"modal-add-pole\">\n      <form\n        id=\"form-add-pole\"\n        className=\"form-add-pole\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <Notifications />\n        <h2>Infos générales</h2>\n        <div>\n          <label>Nom</label>\n          <input\n            name=\"name\"\n            className={errors.name && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Adresse</label>\n          <input\n            name=\"address\"\n            className={errors.address && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Code postal</label>\n          <input\n            name=\"postalCode\"\n            className={errors.postalCode && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Ville</label>\n          <input\n            name=\"city\"\n            className={errors.city && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <hr />\n        <h2>Surface</h2>\n        <div>\n          <label>Surface totale (m²)</label>\n          <input\n            name=\"surfaceTotale\"\n            className={errors.surfaceTotale && \"error\"}\n            value={surfTotale}\n            onChange={(e) => setSurfaceTotale(e.target.value)}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Loyer annuel (€)</label>\n          <input\n            name=\"loyerAnnuel\"\n            value={loyerAnnuel}\n            className={errors.loyerAnnuel && \"error\"}\n            onChange={(e) => {\n              setLoyerAnnuel(e.target.value);\n            }}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label>Surface communs (m²)</label>\n          <input\n            name=\"surfaceCommuns\"\n            className={errors.surfaceCommuns && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"repartitionSurfCommuns\">\n            Répartition surface communs\n          </label>\n          <select\n            name=\"repartitionSurfCommuns\"\n            id=\"repartitionSurfCommuns\"\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"surfacePropre\">% Surface propre</option>\n            <option value=\"recettes\">% Recettes</option>\n            <option value=\"bailleur\">100% Bailleur</option>\n            <option value=\"mg\">100% MG</option>\n          </select>\n        </div>\n        <div>\n          <label>Surface profession non représentée (m²)</label>\n          <input\n            name=\"surfaceProfNonRepr\"\n            className={errors.surfaceProfNonRepr && \"error\"}\n            defaultValue={0}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"repartitionSurfaceProfNonRepr\">\n            Répartition surface profession non représentée\n          </label>\n          <select\n            name=\"repartitionSurfaceProfNonRepr\"\n            id=\"repartitionSurfaceProfNonRepr\"\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"surfacePropre\">% Surface propre</option>\n            <option value=\"recettes\">% Recettes</option>\n            <option value=\"bailleur\">100% Bailleur</option>\n            <option value=\"mg\">100% MG</option>\n          </select>\n        </div>\n        <hr />\n        <h2>Employés</h2>\n        <div>\n          <label>Salaire brut (€)</label>\n          <input\n            name=\"salaire\"\n            className={errors.salaire && \"error\"}\n            defaultValue={\"\"}\n            ref={register}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"repartitionSalaire\">Répartition des salaires</label>\n          <select\n            name=\"repartitionSalaire\"\n            id=\"repartitionSalaire\"\n            defaultValue=\"libre\"\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"ponderation\">Pondération</option>\n            <option value=\"coefSurface\">Coef surface</option>\n            <option value=\"recettes\">% recettes</option>\n            <option value=\"libre\">Libre</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"repartitionTaxeSalaires\">\n            Répartition taxe sur salaires\n          </label>\n          <select\n            name=\"repartitionTaxeSalaires\"\n            id=\"repartitionTaxeSalaires\"\n            defaultValue=\"libre\"\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"ponderation\">Pondération</option>\n            <option value=\"coefSurface\">Coef surface</option>\n            <option value=\"recettes\">% recettes</option>\n            <option value=\"libre\">Libre</option>\n          </select>\n        </div>\n        <div>\n          <label>Charges sociales (%)</label>\n          <input\n            name=\"chargesSociales\"\n            className={errors.chargesSociales && \"error\"}\n            defaultValue={20}\n            ref={register}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"repartitionRefChargeSisa\">\n            Refacturation charges à la SISA (forfaitaire)\n          </label>\n          <select\n            name=\"repartitionRefChargeSisa\"\n            id=\"repartitionRefChargeSisa\"\n            defaultValue=\"ponderation\"\n            ref={register}\n          >\n            <option value=\"partsEgales\">Parts égales</option>\n            <option value=\"ponderation\">Pondération</option>\n            <option value=\"coefSurface\">Coef surface</option>\n            <option value=\"recettes\">% recettes</option>\n            <option value=\"libre\">Libre</option>\n          </select>\n        </div>\n        <button type=\"submit\" form=\"form-add-pole\" value=\"\">\n          Ajouter\n        </button>\n      </form>\n      {loading && <LoadingSpinner />}\n      {error && <p className=\"danger\">{error}</p>}\n    </div>\n  );\n}\n","/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/poleReducers.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/poleActions.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/specialiteReducers.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/specialiteActions.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/1-reducers/declarationReducers.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/2-actions/declarationActions.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/utils.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/admin_pages/tableTest.js",[],"/Users/seghrouchni/Desktop/Projet Aurélie/frontend/src/3-pages/components/TableChargesMensuellesFonct.js",["218","219","220","221"],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":1,"column":21,"nodeType":"228","messageId":"229","endLine":1,"endColumn":29},{"ruleId":"226","severity":1,"message":"230","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":13},{"ruleId":"231","severity":1,"message":"232","line":20,"column":5,"nodeType":"233","endLine":20,"endColumn":16,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":63,"column":18,"nodeType":"237","endLine":63,"endColumn":32},{"ruleId":"235","severity":1,"message":"236","line":67,"column":18,"nodeType":"237","endLine":67,"endColumn":33},{"ruleId":"231","severity":1,"message":"238","line":33,"column":5,"nodeType":"233","endLine":33,"endColumn":12,"suggestions":"239"},{"ruleId":"235","severity":1,"message":"236","line":58,"column":18,"nodeType":"237","endLine":58,"endColumn":32},{"ruleId":"235","severity":1,"message":"236","line":62,"column":18,"nodeType":"237","endLine":62,"endColumn":33},{"ruleId":"226","severity":1,"message":"240","line":8,"column":16,"nodeType":"228","messageId":"229","endLine":8,"endColumn":24},{"ruleId":"226","severity":1,"message":"241","line":5,"column":26,"nodeType":"228","messageId":"229","endLine":5,"endColumn":36},{"ruleId":"226","severity":1,"message":"242","line":6,"column":10,"nodeType":"228","messageId":"229","endLine":6,"endColumn":25},{"ruleId":"226","severity":1,"message":"243","line":3,"column":10,"nodeType":"228","messageId":"229","endLine":3,"endColumn":28},{"ruleId":"231","severity":1,"message":"244","line":25,"column":6,"nodeType":"233","endLine":25,"endColumn":15,"suggestions":"245"},{"ruleId":"226","severity":1,"message":"246","line":13,"column":8,"nodeType":"228","messageId":"229","endLine":13,"endColumn":17},{"ruleId":"231","severity":1,"message":"247","line":42,"column":6,"nodeType":"233","endLine":42,"endColumn":26,"suggestions":"248"},{"ruleId":"226","severity":1,"message":"249","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":14},{"ruleId":"226","severity":1,"message":"250","line":10,"column":3,"nodeType":"228","messageId":"229","endLine":10,"endColumn":26},{"ruleId":"226","severity":1,"message":"251","line":16,"column":10,"nodeType":"228","messageId":"229","endLine":16,"endColumn":13},{"ruleId":"231","severity":1,"message":"252","line":55,"column":6,"nodeType":"233","endLine":55,"endColumn":24,"suggestions":"253"},{"ruleId":"226","severity":1,"message":"254","line":5,"column":3,"nodeType":"228","messageId":"229","endLine":5,"endColumn":13},{"ruleId":"226","severity":1,"message":"255","line":6,"column":3,"nodeType":"228","messageId":"229","endLine":6,"endColumn":25},{"ruleId":"226","severity":1,"message":"256","line":10,"column":25,"nodeType":"228","messageId":"229","endLine":10,"endColumn":31},{"ruleId":"231","severity":1,"message":"257","line":29,"column":6,"nodeType":"233","endLine":29,"endColumn":15,"suggestions":"258"},{"ruleId":"226","severity":1,"message":"243","line":3,"column":10,"nodeType":"228","messageId":"229","endLine":3,"endColumn":28},{"ruleId":"226","severity":1,"message":"259","line":16,"column":11,"nodeType":"228","messageId":"229","endLine":16,"endColumn":18},{"ruleId":"226","severity":1,"message":"260","line":16,"column":29,"nodeType":"228","messageId":"229","endLine":16,"endColumn":34},{"ruleId":"231","severity":1,"message":"261","line":99,"column":6,"nodeType":"233","endLine":99,"endColumn":15,"suggestions":"262"},{"ruleId":"226","severity":1,"message":"263","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":29},{"ruleId":"231","severity":1,"message":"264","line":29,"column":6,"nodeType":"233","endLine":29,"endColumn":15,"suggestions":"265"},{"ruleId":"226","severity":1,"message":"227","line":1,"column":28,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"261","line":58,"column":6,"nodeType":"233","endLine":58,"endColumn":15,"suggestions":"266"},{"ruleId":"231","severity":1,"message":"267","line":53,"column":6,"nodeType":"233","endLine":53,"endColumn":15,"suggestions":"268"},{"ruleId":"231","severity":1,"message":"267","line":113,"column":6,"nodeType":"233","endLine":113,"endColumn":15,"suggestions":"269"},{"ruleId":"231","severity":1,"message":"270","line":48,"column":6,"nodeType":"233","endLine":48,"endColumn":15,"suggestions":"271"},{"ruleId":"226","severity":1,"message":"272","line":16,"column":25,"nodeType":"228","messageId":"229","endLine":16,"endColumn":41},{"ruleId":"226","severity":1,"message":"273","line":149,"column":22,"nodeType":"228","messageId":"229","endLine":149,"endColumn":35},{"ruleId":"226","severity":1,"message":"274","line":159,"column":28,"nodeType":"228","messageId":"229","endLine":159,"endColumn":47},{"ruleId":"231","severity":1,"message":"275","line":512,"column":6,"nodeType":"233","endLine":512,"endColumn":35,"suggestions":"276"},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["279"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.",["280"],"'setSteps' is assigned a value but never used.","'BsFileText' is defined but never used.","'RiLineChartLine' is defined but never used.","'IoMdArrowRoundBack' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["281"],"'tableTest' is defined but never used.","React Hook useEffect has missing dependencies: 'compteur', 'dispatch', and 'props.match.params.id'. Either include them or remove the dependency array. You can also do a functional update 'setCompteur(c => ...)' if you only need 'compteur' in the 'setCompteur' call.",["282"],"'Link' is defined but never used.","'calculRepartitionCharge' is defined but never used.","'set' is defined but never used.","React Hook useEffect has missing dependencies: 'declarations', 'dispatch', 'pole._id', and 'specialites'. Either include them or remove the dependency array.",["283"],"'getOnePole' is defined but never used.","'resetSuccessPoleUpdate' is defined but never used.","'notify' is defined but never used.","React Hook useEffect has missing dependencies: 'declarations', 'dispatch', and 'pole._id'. Either include them or remove the dependency array.",["284"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'pole._id', and 'reset'. Either include them or remove the dependency array.",["285"],"'ModalUpdateSpecialite' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'pole._id', and 'specialites'. Either include them or remove the dependency array.",["286"],["287"],"React Hook useEffect has missing dependencies: 'dispatch' and 'pole._id'. Either include them or remove the dependency array.",["288"],["289"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["290"],"'setNumbTotalPrat' is assigned a value but never used.","'setSalarieETP' is assigned a value but never used.","'setTotalSalaireBrut' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'annoncesInsertions', 'annuelCharge', 'assurance', 'calculCharge', 'calculRefSisa', 'calculSalaireBrut', 'calculTaxeSalaireBrut', 'cfe', 'eau', 'electricite', 'fournAdmin', 'fournEntr', 'fraisBancaires', 'fraisPostaux', 'honoraires', 'internetTelephone', 'loyer', 'menage', 'petitEquipement', and 'receptionDeplacement'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAllCharges' needs the current value of 'loyer'.",["291"],"no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"304","fix":"308"},{"desc":"309","fix":"310"},{"desc":"309","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [props.history, userInfos]",{"range":"316","text":"317"},"Update the dependencies array to be: [error, success]",{"range":"318","text":"319"},"Update the dependencies array to be: [dispatch, success]",{"range":"320","text":"321"},"Update the dependencies array to be: [compteur, dispatch, poleUpdatedSuccess, props.match.params.id]",{"range":"322","text":"323"},"Update the dependencies array to be: [declarationRadio, declarations, dispatch, pole._id, specialites]",{"range":"324","text":"325"},"Update the dependencies array to be: [declarations, dispatch, pole._id, success]",{"range":"326","text":"327"},"Update the dependencies array to be: [dispatch, pole._id, reset, success]",{"range":"328","text":"329"},"Update the dependencies array to be: [dispatch, pole._id, specialites, success]",{"range":"330","text":"331"},{"range":"332","text":"329"},"Update the dependencies array to be: [dispatch, pole._id, success]",{"range":"333","text":"334"},{"range":"335","text":"334"},"Update the dependencies array to be: [reset, success]",{"range":"336","text":"337"},"Update the dependencies array to be: [annoncesInsertions, annuelCharge, assurance, calculCharge, calculRefSisa, calculSalaireBrut, calculTaxeSalaireBrut, cfe, declarationChoosed, eau, electricite, fournAdmin, fournEntr, fraisBancaires, fraisPostaux, honoraires, internetTelephone, loading, loyer, menage, petitEquipement, receptionDeplacement]",{"range":"338","text":"339"},[517,528],"[props.history, userInfos]",[807,814],"[error, success]",[927,936],"[dispatch, success]",[1529,1549],"[compteur, dispatch, poleUpdatedSuccess, props.match.params.id]",[1739,1757],"[declarationRadio, declarations, dispatch, pole._id, specialites]",[1089,1098],"[declarations, dispatch, pole._id, success]",[2649,2658],"[dispatch, pole._id, reset, success]",[1144,1153],"[dispatch, pole._id, specialites, success]",[1718,1727],[1588,1597],"[dispatch, pole._id, success]",[3173,3182],[1702,1711],"[reset, success]",[16556,16585],"[annoncesInsertions, annuelCharge, assurance, calculCharge, calculRefSisa, calculSalaireBrut, calculTaxeSalaireBrut, cfe, declarationChoosed, eau, electricite, fournAdmin, fournEntr, fraisBancaires, fraisPostaux, honoraires, internetTelephone, loading, loyer, menage, petitEquipement, receptionDeplacement]"]